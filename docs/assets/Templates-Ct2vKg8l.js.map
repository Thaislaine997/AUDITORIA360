{"version":3,"file":"Templates-Ct2vKg8l.js","sources":["../../src/pages/Templates.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Container,\n  Typography,\n  Box,\n  Paper,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Chip,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Grid,\n  Card,\n  CardContent,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n} from \"@mui/material\";\nimport {\n  Add,\n  Edit,\n  Delete,\n  FileCopy,\n  Visibility,\n  Description,\n  Settings,\n  Preview,\n} from \"@mui/icons-material\";\n\ninterface Template {\n  id: string;\n  nome: string;\n  descricao: string;\n  categoria: \"folha\" | \"auditoria\" | \"compliance\" | \"geral\";\n  campos: number;\n  ultimaModificacao: string;\n  status: \"ativo\" | \"rascunho\";\n  utilizacoes: number;\n}\n\nconst Templates: React.FC = () => {\n  const [openDialog, setOpenDialog] = useState(false);\n  const [editingId, setEditingId] = useState<string | null>(null);\n  const [previewTemplate, setPreviewTemplate] = useState<Template | null>(null);\n\n  const [templates, setTemplates] = useState<Template[]>([\n    {\n      id: \"1\",\n      nome: \"Configuração Padrão - Empresa Pequena\",\n      descricao: \"Template básico para empresas de até 50 funcionários\",\n      categoria: \"folha\",\n      campos: 12,\n      ultimaModificacao: \"2024-01-15\",\n      status: \"ativo\",\n      utilizacoes: 25,\n    },\n    {\n      id: \"2\",\n      nome: \"Auditoria Trabalhista Completa\",\n      descricao: \"Checklist completo para auditoria trabalhista\",\n      categoria: \"auditoria\",\n      campos: 35,\n      ultimaModificacao: \"2024-01-12\",\n      status: \"ativo\",\n      utilizacoes: 18,\n    },\n    {\n      id: \"3\",\n      nome: \"Compliance CCT 2024\",\n      descricao: \"Template de conformidade com CCT atualizada\",\n      categoria: \"compliance\",\n      campos: 28,\n      ultimaModificacao: \"2024-01-10\",\n      status: \"rascunho\",\n      utilizacoes: 5,\n    },\n  ]);\n\n  const handleEdit = (id: string) => {\n    setEditingId(id);\n    setOpenDialog(true);\n  };\n\n  const handleAdd = () => {\n    setEditingId(null);\n    setOpenDialog(true);\n  };\n\n  const handleDelete = (id: string) => {\n    if (confirm(\"Tem certeza que deseja excluir este template?\")) {\n      setTemplates(prev => prev.filter(t => t.id !== id));\n    }\n  };\n\n  const handleDuplicate = (template: Template) => {\n    const newTemplate = {\n      ...template,\n      id: Date.now().toString(),\n      nome: `${template.nome} (Cópia)`,\n      utilizacoes: 0,\n      status: \"rascunho\" as const,\n    };\n    setTemplates(prev => [...prev, newTemplate]);\n  };\n\n  const getCategoryLabel = (categoria: string) => {\n    switch (categoria) {\n      case \"folha\": return \"Folha de Pagamento\";\n      case \"auditoria\": return \"Auditoria\";\n      case \"compliance\": return \"Compliance\";\n      case \"geral\": return \"Geral\";\n      default: return categoria;\n    }\n  };\n\n  const getCategoryColor = (categoria: string) => {\n    switch (categoria) {\n      case \"folha\": return \"primary\";\n      case \"auditoria\": return \"secondary\";\n      case \"compliance\": return \"warning\";\n      case \"geral\": return \"info\";\n      default: return \"default\";\n    }\n  };\n\n  const templateFields = [\n    { nome: \"Razão Social\", tipo: \"texto\", obrigatorio: true },\n    { nome: \"CNPJ\", tipo: \"documento\", obrigatorio: true },\n    { nome: \"Número de Funcionários\", tipo: \"numero\", obrigatorio: true },\n    { nome: \"Setor Principal\", tipo: \"selecao\", obrigatorio: false },\n    { nome: \"Tipo de Contrato\", tipo: \"multipla_escolha\", obrigatorio: true },\n  ];\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Templates de Configuração\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"text.secondary\">\n          Crie e gerencie templates para configuração de clientes.\n        </Typography>\n      </Box>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={8}>\n          <Paper sx={{ p: 3 }}>\n            <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", mb: 3 }}>\n              <Typography variant=\"h6\">\n                Templates Disponíveis ({templates.length})\n              </Typography>\n              <Button\n                variant=\"contained\"\n                startIcon={<Add />}\n                onClick={handleAdd}\n              >\n                Novo Template\n              </Button>\n            </Box>\n\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Nome</TableCell>\n                    <TableCell>Categoria</TableCell>\n                    <TableCell>Campos</TableCell>\n                    <TableCell>Utilizações</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"center\">Ações</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {templates.map((template) => (\n                    <TableRow key={template.id}>\n                      <TableCell>\n                        <Box>\n                          <Typography variant=\"subtitle2\">\n                            {template.nome}\n                          </Typography>\n                          <Typography variant=\"caption\" color=\"text.secondary\">\n                            {template.descricao}\n                          </Typography>\n                        </Box>\n                      </TableCell>\n                      <TableCell>\n                        <Chip \n                          label={getCategoryLabel(template.categoria)}\n                          color={getCategoryColor(template.categoria) as any}\n                          size=\"small\"\n                        />\n                      </TableCell>\n                      <TableCell>{template.campos}</TableCell>\n                      <TableCell>{template.utilizacoes}</TableCell>\n                      <TableCell>\n                        <Chip \n                          label={template.status}\n                          color={template.status === \"ativo\" ? \"success\" : \"warning\"}\n                          size=\"small\"\n                        />\n                      </TableCell>\n                      <TableCell align=\"center\">\n                        <IconButton \n                          size=\"small\" \n                          color=\"info\"\n                          onClick={() => setPreviewTemplate(template)}\n                        >\n                          <Preview />\n                        </IconButton>\n                        <IconButton \n                          size=\"small\" \n                          color=\"primary\"\n                          onClick={() => handleEdit(template.id)}\n                        >\n                          <Edit />\n                        </IconButton>\n                        <IconButton \n                          size=\"small\" \n                          color=\"secondary\"\n                          onClick={() => handleDuplicate(template)}\n                        >\n                          <FileCopy />\n                        </IconButton>\n                        <IconButton \n                          size=\"small\" \n                          color=\"error\"\n                          onClick={() => handleDelete(template.id)}\n                        >\n                          <Delete />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Estatísticas\n            </Typography>\n            \n            <Card sx={{ mb: 2 }}>\n              <CardContent>\n                <Typography variant=\"h4\" color=\"primary\">\n                  {templates.length}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Templates Criados\n                </Typography>\n              </CardContent>\n            </Card>\n\n            <Card sx={{ mb: 2 }}>\n              <CardContent>\n                <Typography variant=\"h4\" color=\"secondary\">\n                  {templates.reduce((sum, t) => sum + t.utilizacoes, 0)}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Total de Utilizações\n                </Typography>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardContent>\n                <Typography variant=\"h4\" color=\"success.main\">\n                  {templates.filter(t => t.status === \"ativo\").length}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Templates Ativos\n                </Typography>\n              </CardContent>\n            </Card>\n          </Paper>\n\n          <Paper sx={{ p: 3, mt: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Templates Populares\n            </Typography>\n            <List dense>\n              {templates\n                .sort((a, b) => b.utilizacoes - a.utilizacoes)\n                .slice(0, 3)\n                .map((template, index) => (\n                  <React.Fragment key={template.id}>\n                    <ListItem>\n                      <ListItemText\n                        primary={template.nome}\n                        secondary={`${template.utilizacoes} utilizações`}\n                      />\n                    </ListItem>\n                    {index < 2 && <Divider />}\n                  </React.Fragment>\n                ))}\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n\n      {/* Dialog for add/edit template */}\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"lg\" fullWidth>\n        <DialogTitle>\n          {editingId ? \"Editar Template\" : \"Novo Template\"}\n        </DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Nome do Template\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <FormControl fullWidth>\n                <InputLabel>Categoria</InputLabel>\n                <Select\n                  label=\"Categoria\"\n                  defaultValue=\"\"\n                >\n                  <MenuItem value=\"folha\">Folha de Pagamento</MenuItem>\n                  <MenuItem value=\"auditoria\">Auditoria</MenuItem>\n                  <MenuItem value=\"compliance\">Compliance</MenuItem>\n                  <MenuItem value=\"geral\">Geral</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Descrição\"\n                multiline\n                rows={3}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"h6\" gutterBottom>\n                Campos do Template\n              </Typography>\n              <List>\n                {templateFields.map((field, index) => (\n                  <ListItem key={index} divider>\n                    <ListItemText\n                      primary={field.nome}\n                      secondary={`${field.tipo} - ${field.obrigatorio ? \"Obrigatório\" : \"Opcional\"}`}\n                    />\n                    <IconButton size=\"small\" color=\"primary\">\n                      <Settings />\n                    </IconButton>\n                    <IconButton size=\"small\" color=\"error\">\n                      <Delete />\n                    </IconButton>\n                  </ListItem>\n                ))}\n              </List>\n              <Button variant=\"outlined\" startIcon={<Add />} fullWidth sx={{ mt: 2 }}>\n                Adicionar Campo\n              </Button>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenDialog(false)}>\n            Cancelar\n          </Button>\n          <Button variant=\"contained\" onClick={() => setOpenDialog(false)}>\n            Salvar Template\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Preview Dialog */}\n      <Dialog \n        open={!!previewTemplate} \n        onClose={() => setPreviewTemplate(null)} \n        maxWidth=\"md\" \n        fullWidth\n      >\n        <DialogTitle>\n          Preview: {previewTemplate?.nome}\n        </DialogTitle>\n        <DialogContent>\n          {previewTemplate && (\n            <Box>\n              <Typography variant=\"body1\" gutterBottom>\n                {previewTemplate.descricao}\n              </Typography>\n              <Typography variant=\"h6\" gutterBottom sx={{ mt: 3 }}>\n                Campos do Template:\n              </Typography>\n              <List>\n                {templateFields.map((field, index) => (\n                  <ListItem key={index}>\n                    <Description sx={{ mr: 2 }} />\n                    <ListItemText\n                      primary={field.nome}\n                      secondary={`Tipo: ${field.tipo} | ${field.obrigatorio ? \"Obrigatório\" : \"Opcional\"}`}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setPreviewTemplate(null)}>\n            Fechar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default Templates;"],"names":["Templates","openDialog","setOpenDialog","useState","editingId","setEditingId","previewTemplate","setPreviewTemplate","templates","setTemplates","handleEdit","id","handleAdd","handleDelete","prev","t","handleDuplicate","template","newTemplate","getCategoryLabel","categoria","getCategoryColor","templateFields","jsxs","Container","Box","jsx","Typography","Grid","Paper","Button","Add","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Chip","IconButton","Preview","Edit","FileCopy","Delete","Card","CardContent","sum","List","b","index","React","ListItem","ListItemText","Divider","Dialog","DialogTitle","DialogContent","TextField","FormControl","InputLabel","Select","MenuItem","field","Settings","DialogActions","Description"],"mappings":"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"}