{"version":3,"file":"MasteryPaths-ajm8joN8.js","sources":["../../src/pages/MasteryPaths.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Typography,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  LinearProgress,\n  Chip,\n  Button,\n  Avatar,\n  Stepper,\n  Step,\n  StepLabel,\n  StepContent,\n  Paper,\n  Alert,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from '@mui/material';\nimport {\n  School,\n  EmojiEvents,\n  TrendingUp,\n  CheckCircle,\n  Lock,\n  Star,\n  Psychology,\n  Security,\n  Assessment,\n  Timeline,\n  Close,\n  PlayArrow,\n  Quiz,\n} from '@mui/icons-material';\n\n/**\n * MasteryPaths - Gamifica√ß√£o 2.0: Caminhos de Mestria\n * \n * Sistema de engajamento focado no desenvolvimento de compet√™ncias e motiva√ß√£o intr√≠nseca.\n * Implementa caminhos de aprendizagem estruturados com desafios e reconhecimento.\n * \n * Parte da Grande S√≠ntese: Initiative III - Product Intelligence Evolution\n */\n\ninterface MasteryPath {\n  id: string;\n  name: string;\n  description: string;\n  icon: React.ReactNode;\n  color: string;\n  totalSteps: number;\n  completedSteps: number;\n  estimatedTime: string;\n  difficulty: 'Iniciante' | 'Interm√©dio' | 'Avan√ßado' | 'Especialista';\n  rewards: string[];\n  prerequisites?: string[];\n  locked?: boolean;\n}\n\ninterface Challenge {\n  id: string;\n  title: string;\n  description: string;\n  type: 'practical' | 'quiz' | 'analysis' | 'creation';\n  points: number;\n  timeEstimate: string;\n  completed: boolean;\n  tools: string[];\n}\n\nconst MasteryPaths: React.FC = () => {\n  const [paths, setPaths] = useState<MasteryPath[]>([]);\n  const [selectedPath, setSelectedPath] = useState<MasteryPath | null>(null);\n  const [challenges, setChallenges] = useState<Challenge[]>([]);\n  const [showChallengeDialog, setShowChallengeDialog] = useState(false);\n  const [currentChallenge, setCurrentChallenge] = useState<Challenge | null>(null);\n  const [userProgress, setUserProgress] = useState({\n    totalPoints: 1250,\n    level: 'Auditor Interm√©dio',\n    streak: 7,\n    achievements: ['Primeiro Relat√≥rio', 'Mestre da Conformidade', 'Analista Experiente']\n  });\n\n  useEffect(() => {\n    // Initialize mastery paths\n    const initialPaths: MasteryPath[] = [\n      {\n        id: 'compliance_master',\n        name: 'Mestre da Conformidade',\n        description: 'Domine as t√©cnicas de auditoria de conformidade e an√°lise de riscos regulamentares.',\n        icon: <Security />,\n        color: '#10B981',\n        totalSteps: 8,\n        completedSteps: 3,\n        estimatedTime: '4-6 semanas',\n        difficulty: 'Interm√©dio',\n        rewards: ['Badge Mestre da Conformidade', '+500 pontos', 'Acesso a relat√≥rios avan√ßados'],\n        prerequisites: ['Conhecimentos b√°sicos de auditoria']\n      },\n      {\n        id: 'ai_consultant_expert',\n        name: 'Especialista em Consultor IA',\n        description: 'Torne-se um especialista na utiliza√ß√£o da IA para an√°lise de riscos e recomenda√ß√µes.',\n        icon: <Psychology />,\n        color: '#0077FF',\n        totalSteps: 6,\n        completedSteps: 1,\n        estimatedTime: '3-4 semanas',\n        difficulty: 'Avan√ßado',\n        rewards: ['Badge IA Expert', '+750 pontos', 'Acesso a modelos IA avan√ßados'],\n        prerequisites: ['Mestre da Conformidade']\n      },\n      {\n        id: 'analytics_wizard',\n        name: 'Mago da Anal√≠tica',\n        description: 'Desenvolva compet√™ncias avan√ßadas em an√°lise de dados e cria√ß√£o de relat√≥rios insights.',\n        icon: <Assessment />,\n        color: '#F59E0B',\n        totalSteps: 10,\n        completedSteps: 0,\n        estimatedTime: '6-8 semanas',\n        difficulty: 'Especialista',\n        rewards: ['Badge Mago Anal√≠tico', '+1000 pontos', 'Ferramentas de an√°lise exclusivas'],\n        prerequisites: ['Mestre da Conformidade', 'Especialista em Consultor IA'],\n        locked: true\n      },\n      {\n        id: 'payroll_ninja',\n        name: 'Ninja da Folha de Pagamento',\n        description: 'Expertise completa em processamento de folhas de pagamento e conformidade trabalhista.',\n        icon: <Timeline />,\n        color: '#8B5CF6',\n        totalSteps: 7,\n        completedSteps: 5,\n        estimatedTime: '3-5 semanas',\n        difficulty: 'Interm√©dio',\n        rewards: ['Badge Ninja Payroll', '+600 pontos', 'Calculadora avan√ßada de folhas']\n      }\n    ];\n\n    setPaths(initialPaths);\n    setSelectedPath(initialPaths[0]);\n    loadChallenges(initialPaths[0].id);\n  }, []);\n\n  const loadChallenges = (pathId: string) => {\n    // Mock challenges based on selected path\n    const challengesByPath: Record<string, Challenge[]> = {\n      compliance_master: [\n        {\n          id: 'c1',\n          title: 'Criar Checklist de Conformidade',\n          description: 'Use as ferramentas de auditoria para criar um checklist personalizado de conformidade.',\n          type: 'creation',\n          points: 150,\n          timeEstimate: '30 min',\n          completed: true,\n          tools: ['Audit Templates', 'Risk Assessment']\n        },\n        {\n          id: 'c2',\n          title: 'Identificar Riscos Regulamentares',\n          description: 'Analise um cen√°rio empresarial e identifique os principais riscos de conformidade.',\n          type: 'analysis',\n          points: 200,\n          timeEstimate: '45 min',\n          completed: true,\n          tools: ['Risk Consultant AI', 'Regulatory Database']\n        },\n        {\n          id: 'c3',\n          title: 'Quiz: Normas de Auditoria',\n          description: 'Teste seus conhecimentos sobre as principais normas e regulamenta√ß√µes.',\n          type: 'quiz',\n          points: 100,\n          timeEstimate: '15 min',\n          completed: true,\n          tools: ['Knowledge Base']\n        },\n        {\n          id: 'c4',\n          title: 'Relat√≥rio de Auditoria Completo',\n          description: 'Crie um relat√≥rio completo de auditoria usando dados reais simulados.',\n          type: 'practical',\n          points: 300,\n          timeEstimate: '2 horas',\n          completed: false,\n          tools: ['Report Builder', 'Data Analytics', 'Risk Consultant AI']\n        }\n      ],\n      ai_consultant_expert: [\n        {\n          id: 'ai1',\n          title: 'Otimizar Prompts de IA',\n          description: 'Aprenda a criar prompts eficazes para o Consultor de Riscos.',\n          type: 'practical',\n          points: 200,\n          timeEstimate: '45 min',\n          completed: true,\n          tools: ['AI Consultant', 'Prompt Library']\n        },\n        {\n          id: 'ai2',\n          title: 'Interpretar An√°lises de Confian√ßa',\n          description: 'Compreenda e interprete os n√≠veis de confian√ßa das recomenda√ß√µes da IA.',\n          type: 'analysis',\n          points: 250,\n          timeEstimate: '60 min',\n          completed: false,\n          tools: ['AI Consultant', 'Confidence Metrics']\n        }\n      ]\n    };\n\n    setChallenges(challengesByPath[pathId] || []);\n  };\n\n  const handleStartChallenge = (challenge: Challenge) => {\n    setCurrentChallenge(challenge);\n    setShowChallengeDialog(true);\n  };\n\n  const handleCompleteChallenge = () => {\n    if (currentChallenge) {\n      setChallenges(prev => \n        prev.map(c => \n          c.id === currentChallenge.id ? { ...c, completed: true } : c\n        )\n      );\n      \n      // Update user progress\n      setUserProgress(prev => ({\n        ...prev,\n        totalPoints: prev.totalPoints + currentChallenge.points,\n        streak: prev.streak + 1\n      }));\n      \n      // Update path progress\n      if (selectedPath) {\n        setPaths(prev => \n          prev.map(p => \n            p.id === selectedPath.id \n              ? { ...p, completedSteps: p.completedSteps + 1 }\n              : p\n          )\n        );\n        \n        setSelectedPath(prev => prev ? {\n          ...prev,\n          completedSteps: prev.completedSteps + 1\n        } : null);\n      }\n    }\n    \n    setShowChallengeDialog(false);\n    setCurrentChallenge(null);\n  };\n\n  const getProgressPercentage = (path: MasteryPath) => {\n    return (path.completedSteps / path.totalSteps) * 100;\n  };\n\n  const getDifficultyColor = (difficulty: MasteryPath['difficulty']) => {\n    switch (difficulty) {\n      case 'Iniciante': return '#10B981';\n      case 'Interm√©dio': return '#F59E0B';\n      case 'Avan√ßado': return '#EF4444';\n      case 'Especialista': return '#8B5CF6';\n      default: return '#6B7280';\n    }\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ py: 4 }}>\n      {/* Header with user progress */}\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h3\" gutterBottom sx={{ fontWeight: 'bold' }}>\n          üéì Caminhos de Mestria\n        </Typography>\n        <Typography variant=\"h6\" color=\"text.secondary\" paragraph>\n          Desenvolva suas compet√™ncias atrav√©s de desafios estruturados e reconhecimento de conquistas.\n        </Typography>\n        \n        {/* User Progress Card */}\n        <Card sx={{ mb: 4, background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)', color: 'white' }}>\n          <CardContent>\n            <Grid container alignItems=\"center\" spacing={3}>\n              <Grid item>\n                <Avatar sx={{ width: 64, height: 64, bgcolor: 'rgba(255,255,255,0.2)' }}>\n                  <EmojiEvents sx={{ fontSize: 32 }} />\n                </Avatar>\n              </Grid>\n              <Grid item xs>\n                <Typography variant=\"h5\" gutterBottom>\n                  {userProgress.level}\n                </Typography>\n                <Typography variant=\"body1\" sx={{ opacity: 0.9 }}>\n                  {userProgress.totalPoints} pontos ‚Ä¢ {userProgress.streak} dias consecutivos\n                </Typography>\n                <Box sx={{ display: 'flex', gap: 1, mt: 1, flexWrap: 'wrap' }}>\n                  {userProgress.achievements.map((achievement, index) => (\n                    <Chip \n                      key={index}\n                      label={achievement} \n                      size=\"small\" \n                      sx={{ bgcolor: 'rgba(255,255,255,0.2)', color: 'white' }}\n                      icon={<Star sx={{ color: 'gold !important' }} />}\n                    />\n                  ))}\n                </Box>\n              </Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Box>\n\n      <Grid container spacing={4}>\n        {/* Mastery Paths List */}\n        <Grid item xs={12} md={6}>\n          <Typography variant=\"h5\" gutterBottom>\n            Caminhos Dispon√≠veis\n          </Typography>\n          \n          {paths.map((path) => (\n            <Card \n              key={path.id}\n              sx={{ \n                mb: 2, \n                cursor: path.locked ? 'not-allowed' : 'pointer',\n                opacity: path.locked ? 0.6 : 1,\n                border: selectedPath?.id === path.id ? `2px solid ${path.color}` : 'none',\n                '&:hover': {\n                  boxShadow: path.locked ? 'none' : '0 8px 25px rgba(0,0,0,0.15)',\n                  transform: path.locked ? 'none' : 'translateY(-2px)'\n                },\n                transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)'\n              }}\n              onClick={() => {\n                if (!path.locked) {\n                  setSelectedPath(path);\n                  loadChallenges(path.id);\n                }\n              }}\n            >\n              <CardContent>\n                <Box sx={{ display: 'flex', alignItems: 'flex-start', gap: 2 }}>\n                  <Avatar sx={{ bgcolor: path.color }}>\n                    {path.locked ? <Lock /> : path.icon}\n                  </Avatar>\n                  <Box flex={1}>\n                    <Typography variant=\"h6\" gutterBottom>\n                      {path.name}\n                      {path.locked && <Lock sx={{ ml: 1, fontSize: 16, opacity: 0.6 }} />}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                      {path.description}\n                    </Typography>\n                    \n                    <Box sx={{ display: 'flex', gap: 1, mb: 2, flexWrap: 'wrap' }}>\n                      <Chip \n                        label={path.difficulty} \n                        size=\"small\" \n                        sx={{ bgcolor: getDifficultyColor(path.difficulty), color: 'white' }}\n                      />\n                      <Chip label={path.estimatedTime} size=\"small\" variant=\"outlined\" />\n                    </Box>\n                    \n                    {!path.locked && (\n                      <>\n                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\n                          <Typography variant=\"body2\" sx={{ mr: 1 }}>\n                            Progresso:\n                          </Typography>\n                          <LinearProgress \n                            variant=\"determinate\" \n                            value={getProgressPercentage(path)}\n                            sx={{ \n                              flex: 1, \n                              mr: 1,\n                              '& .MuiLinearProgress-bar': { bgcolor: path.color }\n                            }}\n                          />\n                          <Typography variant=\"body2\" fontWeight=\"bold\">\n                            {path.completedSteps}/{path.totalSteps}\n                          </Typography>\n                        </Box>\n                        \n                        <Typography variant=\"caption\" color=\"text.secondary\">\n                          Recompensas: {path.rewards.join(', ')}\n                        </Typography>\n                      </>\n                    )}\n                    \n                    {path.prerequisites && (\n                      <Alert severity=\"info\" sx={{ mt: 2 }}>\n                        <Typography variant=\"caption\">\n                          Pr√©-requisitos: {path.prerequisites.join(', ')}\n                        </Typography>\n                      </Alert>\n                    )}\n                  </Box>\n                </Box>\n              </CardContent>\n            </Card>\n          ))}\n        </Grid>\n\n        {/* Selected Path Challenges */}\n        <Grid item xs={12} md={6}>\n          {selectedPath && (\n            <>\n              <Typography variant=\"h5\" gutterBottom>\n                {selectedPath.name} - Desafios\n              </Typography>\n              \n              <Stepper orientation=\"vertical\">\n                {challenges.map((challenge, index) => (\n                  <Step key={challenge.id} active={true}>\n                    <StepLabel \n                      StepIconComponent={() => (\n                        <Avatar \n                          sx={{ \n                            width: 32, \n                            height: 32, \n                            bgcolor: challenge.completed ? '#10B981' : '#6B7280' \n                          }}\n                        >\n                          {challenge.completed ? (\n                            <CheckCircle sx={{ fontSize: 20 }} />\n                          ) : (\n                            <Typography variant=\"caption\">{index + 1}</Typography>\n                          )}\n                        </Avatar>\n                      )}\n                    >\n                      <Typography variant=\"h6\">\n                        {challenge.title}\n                        <Chip \n                          label={`${challenge.points} pts`} \n                          size=\"small\" \n                          sx={{ ml: 1, bgcolor: selectedPath.color, color: 'white' }}\n                        />\n                      </Typography>\n                    </StepLabel>\n                    <StepContent>\n                      <Typography variant=\"body2\" paragraph>\n                        {challenge.description}\n                      </Typography>\n                      \n                      <Box sx={{ display: 'flex', gap: 1, mb: 2, flexWrap: 'wrap' }}>\n                        <Chip \n                          label={challenge.type === 'quiz' ? 'Quiz' : challenge.type === 'practical' ? 'Pr√°tico' : challenge.type === 'analysis' ? 'An√°lise' : 'Cria√ß√£o'}\n                          size=\"small\" \n                          icon={challenge.type === 'quiz' ? <Quiz /> : <PlayArrow />}\n                        />\n                        <Chip label={challenge.timeEstimate} size=\"small\" variant=\"outlined\" />\n                      </Box>\n                      \n                      <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\" sx={{ mb: 2 }}>\n                        Ferramentas: {challenge.tools.join(', ')}\n                      </Typography>\n                      \n                      {!challenge.completed ? (\n                        <Button \n                          variant=\"contained\" \n                          startIcon={<PlayArrow />}\n                          sx={{ bgcolor: selectedPath.color }}\n                          onClick={() => handleStartChallenge(challenge)}\n                        >\n                          Iniciar Desafio\n                        </Button>\n                      ) : (\n                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                          <CheckCircle sx={{ color: '#10B981' }} />\n                          <Typography variant=\"body2\" sx={{ color: '#10B981', fontWeight: 'bold' }}>\n                            Conclu√≠do! +{challenge.points} pontos\n                          </Typography>\n                        </Box>\n                      )}\n                    </StepContent>\n                  </Step>\n                ))}\n              </Stepper>\n            </>\n          )}\n        </Grid>\n      </Grid>\n\n      {/* Challenge Dialog */}\n      <Dialog \n        open={showChallengeDialog} \n        onClose={() => setShowChallengeDialog(false)}\n        maxWidth=\"sm\"\n        fullWidth\n      >\n        <DialogTitle sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Typography variant=\"h6\">\n            {currentChallenge?.title}\n          </Typography>\n          <IconButton onClick={() => setShowChallengeDialog(false)}>\n            <Close />\n          </IconButton>\n        </DialogTitle>\n        \n        <DialogContent>\n          <Typography variant=\"body1\" paragraph>\n            {currentChallenge?.description}\n          </Typography>\n          \n          <Alert severity=\"info\" sx={{ mb: 2 }}>\n            Este √© um desafio simulado. Em uma implementa√ß√£o completa, aqui seria apresentado o \n            conte√∫do interativo espec√≠fico do desafio, como interfaces de quiz, simuladores de \n            auditoria, ou ferramentas de an√°lise.\n          </Alert>\n          \n          <Typography variant=\"body2\" color=\"text.secondary\">\n            Pontos a ganhar: {currentChallenge?.points} ‚Ä¢ \n            Tempo estimado: {currentChallenge?.timeEstimate}\n          </Typography>\n        </DialogContent>\n        \n        <DialogActions>\n          <Button onClick={() => setShowChallengeDialog(false)}>\n            Cancelar\n          </Button>\n          <Button \n            variant=\"contained\" \n            onClick={handleCompleteChallenge}\n            startIcon={<CheckCircle />}\n          >\n            Marcar como Conclu√≠do\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default MasteryPaths;"],"names":["MasteryPaths","paths","setPaths","useState","selectedPath","setSelectedPath","challenges","setChallenges","showChallengeDialog","setShowChallengeDialog","currentChallenge","setCurrentChallenge","userProgress","setUserProgress","useEffect","initialPaths","Security","Psychology","Assessment","Timeline","loadChallenges","pathId","handleStartChallenge","challenge","handleCompleteChallenge","prev","c","p","getProgressPercentage","path","getDifficultyColor","difficulty","jsxs","Container","Box","jsx","Typography","Card","CardContent","Grid","Avatar","EmojiEvents","achievement","index","Chip","Star","Lock","Fragment","LinearProgress","Alert","Stepper","Step","StepLabel","CheckCircle","StepContent","Quiz","PlayArrow","Button","Dialog","DialogTitle","IconButton","Close","DialogContent","DialogActions"],"mappings":"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"}