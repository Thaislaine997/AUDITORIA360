{"version":3,"file":"MinhaConta-BGLaulbr.js","sources":["../../src/pages/MinhaConta.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Container,\n  Typography,\n  Box,\n  Paper,\n  Grid,\n  Card,\n  CardContent,\n  TextField,\n  Button,\n  Avatar,\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Switch,\n  FormControlLabel,\n  Alert,\n  Tab,\n  Tabs,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n} from \"@mui/material\";\nimport {\n  Person,\n  Email,\n  Phone,\n  Lock,\n  Notifications,\n  Security,\n  Visibility,\n  Save,\n  Edit,\n} from \"@mui/icons-material\";\nimport { useAuthStore } from \"../stores/authStore\";\n\nconst MinhaConta: React.FC = () => {\n  const { user } = useAuthStore();\n  const [tabValue, setTabValue] = useState(0);\n  const [openPasswordDialog, setOpenPasswordDialog] = useState(false);\n  const [notifications, setNotifications] = useState({\n    email: true,\n    push: false,\n    sms: false,\n  });\n\n  const [userInfo, setUserInfo] = useState({\n    nome: user?.name || \"\",\n    email: user?.email || \"\",\n    telefone: \"(11) 99999-9999\",\n    cargo: \"Administrador\",\n    empresa: \"AUDITORIA360\",\n  });\n\n  const handleSave = () => {\n    // Save user information\n    console.log(\"Salvando informações do usuário:\", userInfo);\n  };\n\n  const handleNotificationChange = (setting: string) => {\n    setNotifications(prev => ({\n      ...prev,\n      [setting]: !prev[setting as keyof typeof prev],\n    }));\n  };\n\n  const securitySettings = [\n    {\n      title: \"Autenticação de Dois Fatores\",\n      description: \"Adicione uma camada extra de segurança à sua conta\",\n      enabled: false,\n      icon: <Security />,\n    },\n    {\n      title: \"Sessões Ativas\",\n      description: \"Gerencie seus dispositivos conectados\",\n      enabled: true,\n      icon: <Visibility />,\n    },\n  ];\n\n  const auditLog = [\n    { action: \"Login realizado\", timestamp: \"2024-01-15 14:30\", ip: \"192.168.1.100\" },\n    { action: \"Perfil atualizado\", timestamp: \"2024-01-14 16:45\", ip: \"192.168.1.100\" },\n    { action: \"Senha alterada\", timestamp: \"2024-01-10 09:15\", ip: \"192.168.1.100\" },\n  ];\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Minha Conta\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"text.secondary\">\n          Gerencie seu perfil e configurações de conta.\n        </Typography>\n      </Box>\n\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 3, textAlign: \"center\" }}>\n            <Avatar\n              sx={{ \n                width: 120, \n                height: 120, \n                margin: \"0 auto 16px\",\n                fontSize: \"3rem\"\n              }}\n            >\n              {user?.name?.charAt(0)?.toUpperCase() || \"U\"}\n            </Avatar>\n            <Typography variant=\"h6\" gutterBottom>\n              {user?.name || \"Usuário\"}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n              {user?.email || \"email@exemplo.com\"}\n            </Typography>\n            <Typography variant=\"caption\" color=\"text.secondary\">\n              {user?.role === \"super_admin\" ? \"Super Administrador\" : \n               user?.role === \"contabilidade\" ? \"Gestor\" : \"Cliente\"}\n            </Typography>\n            <Box sx={{ mt: 2 }}>\n              <Button variant=\"outlined\" startIcon={<Edit />} fullWidth>\n                Alterar Foto\n              </Button>\n            </Box>\n          </Paper>\n        </Grid>\n\n        <Grid item xs={12} md={8}>\n          <Paper sx={{ p: 3 }}>\n            <Tabs \n              value={tabValue} \n              onChange={(_, newValue) => setTabValue(newValue)}\n              sx={{ mb: 3 }}\n            >\n              <Tab label=\"Informações Pessoais\" />\n              <Tab label=\"Segurança\" />\n              <Tab label=\"Notificações\" />\n              <Tab label=\"Atividades\" />\n            </Tabs>\n\n            {/* Informações Pessoais */}\n            {tabValue === 0 && (\n              <Box>\n                <Grid container spacing={2}>\n                  <Grid item xs={12} md={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Nome Completo\"\n                      value={userInfo.nome}\n                      onChange={(e) => setUserInfo(prev => ({ ...prev, nome: e.target.value }))}\n                      InputProps={{\n                        startAdornment: <Person sx={{ mr: 1, color: \"action.active\" }} />,\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Email\"\n                      value={userInfo.email}\n                      onChange={(e) => setUserInfo(prev => ({ ...prev, email: e.target.value }))}\n                      InputProps={{\n                        startAdornment: <Email sx={{ mr: 1, color: \"action.active\" }} />,\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Telefone\"\n                      value={userInfo.telefone}\n                      onChange={(e) => setUserInfo(prev => ({ ...prev, telefone: e.target.value }))}\n                      InputProps={{\n                        startAdornment: <Phone sx={{ mr: 1, color: \"action.active\" }} />,\n                      }}\n                    />\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <TextField\n                      fullWidth\n                      label=\"Cargo\"\n                      value={userInfo.cargo}\n                      disabled\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <TextField\n                      fullWidth\n                      label=\"Empresa\"\n                      value={userInfo.empresa}\n                      disabled\n                    />\n                  </Grid>\n                </Grid>\n                \n                <Box sx={{ mt: 3, display: \"flex\", gap: 2 }}>\n                  <Button variant=\"contained\" startIcon={<Save />} onClick={handleSave}>\n                    Salvar Alterações\n                  </Button>\n                  <Button variant=\"outlined\">\n                    Cancelar\n                  </Button>\n                </Box>\n              </Box>\n            )}\n\n            {/* Segurança */}\n            {tabValue === 1 && (\n              <Box>\n                <Card sx={{ mb: 3 }}>\n                  <CardContent>\n                    <Typography variant=\"h6\" gutterBottom>\n                      Alterar Senha\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                      É recomendado alterar sua senha regularmente para manter a segurança da conta.\n                    </Typography>\n                    <Button \n                      variant=\"outlined\" \n                      startIcon={<Lock />}\n                      onClick={() => setOpenPasswordDialog(true)}\n                    >\n                      Alterar Senha\n                    </Button>\n                  </CardContent>\n                </Card>\n\n                <List>\n                  {securitySettings.map((setting, index) => (\n                    <ListItem key={index} divider>\n                      <ListItemIcon>\n                        {setting.icon}\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={setting.title}\n                        secondary={setting.description}\n                      />\n                      <Switch\n                        checked={setting.enabled}\n                        onChange={() => {}}\n                        color=\"primary\"\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n              </Box>\n            )}\n\n            {/* Notificações */}\n            {tabValue === 2 && (\n              <Box>\n                <Typography variant=\"h6\" gutterBottom>\n                  Preferências de Notificação\n                </Typography>\n                <List>\n                  <ListItem>\n                    <ListItemIcon>\n                      <Email />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Notificações por Email\"\n                      secondary=\"Receber alertas e atualizações por email\"\n                    />\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={notifications.email}\n                          onChange={() => handleNotificationChange(\"email\")}\n                        />\n                      }\n                      label=\"\"\n                    />\n                  </ListItem>\n                  <Divider />\n                  <ListItem>\n                    <ListItemIcon>\n                      <Notifications />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Notificações Push\"\n                      secondary=\"Receber notificações no navegador\"\n                    />\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={notifications.push}\n                          onChange={() => handleNotificationChange(\"push\")}\n                        />\n                      }\n                      label=\"\"\n                    />\n                  </ListItem>\n                  <Divider />\n                  <ListItem>\n                    <ListItemIcon>\n                      <Phone />\n                    </ListItemIcon>\n                    <ListItemText\n                      primary=\"Notificações SMS\"\n                      secondary=\"Receber alertas importantes via SMS\"\n                    />\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          checked={notifications.sms}\n                          onChange={() => handleNotificationChange(\"sms\")}\n                        />\n                      }\n                      label=\"\"\n                    />\n                  </ListItem>\n                </List>\n              </Box>\n            )}\n\n            {/* Atividades */}\n            {tabValue === 3 && (\n              <Box>\n                <Typography variant=\"h6\" gutterBottom>\n                  Log de Atividades\n                </Typography>\n                <List>\n                  {auditLog.map((log, index) => (\n                    <ListItem key={index} divider>\n                      <ListItemText\n                        primary={log.action}\n                        secondary={`${log.timestamp} - IP: ${log.ip}`}\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n              </Box>\n            )}\n          </Paper>\n        </Grid>\n      </Grid>\n\n      {/* Password Change Dialog */}\n      <Dialog open={openPasswordDialog} onClose={() => setOpenPasswordDialog(false)} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>Alterar Senha</DialogTitle>\n        <DialogContent>\n          <Box sx={{ pt: 2 }}>\n            <TextField\n              fullWidth\n              label=\"Senha Atual\"\n              type=\"password\"\n              margin=\"normal\"\n            />\n            <TextField\n              fullWidth\n              label=\"Nova Senha\"\n              type=\"password\"\n              margin=\"normal\"\n            />\n            <TextField\n              fullWidth\n              label=\"Confirmar Nova Senha\"\n              type=\"password\"\n              margin=\"normal\"\n            />\n            <Alert severity=\"info\" sx={{ mt: 2 }}>\n              A senha deve ter pelo menos 8 caracteres, incluindo letras e números.\n            </Alert>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenPasswordDialog(false)}>\n            Cancelar\n          </Button>\n          <Button variant=\"contained\" onClick={() => setOpenPasswordDialog(false)}>\n            Alterar Senha\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default MinhaConta;"],"names":["MinhaConta","user","useAuthStore","tabValue","setTabValue","useState","openPasswordDialog","setOpenPasswordDialog","notifications","setNotifications","userInfo","setUserInfo","handleSave","handleNotificationChange","setting","prev","securitySettings","Security","Visibility","auditLog","jsxs","Container","Box","jsx","Typography","Grid","Paper","Avatar","Button","Edit","Tabs","_","newValue","Tab","TextField","e","Person","Email","Phone","Save","Card","CardContent","Lock","List","index","ListItem","ListItemIcon","ListItemText","Switch","FormControlLabel","Divider","Notifications","log","Dialog","DialogTitle","DialogContent","Alert","DialogActions"],"mappings":"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"}