{"version":3,"file":"ExportButton-R-xP34H0.js","sources":["../../src/components/ExportButton.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  ButtonGroup,\n  Menu,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n  CircularProgress,\n} from \"@mui/material\";\nimport {\n  FileDownload as FileDownloadIcon,\n  PictureAsPdf as PdfIcon,\n  TableChart as CsvIcon,\n  ExpandMore as ExpandMoreIcon,\n} from \"@mui/icons-material\";\n\ninterface ExportButtonProps {\n  onExportPdf?: () => Promise<void> | void;\n  onExportCsv?: () => Promise<void> | void;\n  disabled?: boolean;\n  size?: \"small\" | \"medium\" | \"large\";\n  variant?: \"contained\" | \"outlined\" | \"text\";\n}\n\nconst ExportButton: React.FC<ExportButtonProps> = ({\n  onExportPdf,\n  onExportCsv,\n  disabled = false,\n  size = \"medium\",\n  variant = \"outlined\",\n}) => {\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  const [exportingPdf, setExportingPdf] = useState(false);\n  const [exportingCsv, setExportingCsv] = useState(false);\n\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleExportPdf = async () => {\n    if (!onExportPdf) return;\n    \n    setExportingPdf(true);\n    try {\n      await onExportPdf();\n    } catch (error) {\n      console.error(\"Error exporting PDF:\", error);\n    } finally {\n      setExportingPdf(false);\n      handleClose();\n    }\n  };\n\n  const handleExportCsv = async () => {\n    if (!onExportCsv) return;\n    \n    setExportingCsv(true);\n    try {\n      await onExportCsv();\n    } catch (error) {\n      console.error(\"Error exporting CSV:\", error);\n    } finally {\n      setExportingCsv(false);\n      handleClose();\n    }\n  };\n\n  // If only one export option is available, show a single button\n  if (!onExportPdf && onExportCsv) {\n    return (\n      <Button\n        variant={variant}\n        size={size}\n        startIcon={exportingCsv ? <CircularProgress size={16} /> : <CsvIcon />}\n        onClick={handleExportCsv}\n        disabled={disabled || exportingCsv}\n      >\n        Exportar CSV\n      </Button>\n    );\n  }\n\n  if (onExportPdf && !onExportCsv) {\n    return (\n      <Button\n        variant={variant}\n        size={size}\n        startIcon={exportingPdf ? <CircularProgress size={16} /> : <PdfIcon />}\n        onClick={handleExportPdf}\n        disabled={disabled || exportingPdf}\n      >\n        Exportar PDF\n      </Button>\n    );\n  }\n\n  // If both options are available, show dropdown menu\n  return (\n    <>\n      <ButtonGroup variant={variant} size={size}>\n        <Button\n          startIcon={<FileDownloadIcon />}\n          onClick={handleClick}\n          disabled={disabled}\n          endIcon={<ExpandMoreIcon />}\n        >\n          Exportar\n        </Button>\n      </ButtonGroup>\n\n      <Menu\n        anchorEl={anchorEl}\n        open={open}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"right\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\",\n        }}\n      >\n        {onExportPdf && (\n          <MenuItem onClick={handleExportPdf} disabled={exportingPdf}>\n            <ListItemIcon>\n              {exportingPdf ? <CircularProgress size={20} /> : <PdfIcon />}\n            </ListItemIcon>\n            <ListItemText>Exportar para PDF</ListItemText>\n          </MenuItem>\n        )}\n        {onExportCsv && (\n          <MenuItem onClick={handleExportCsv} disabled={exportingCsv}>\n            <ListItemIcon>\n              {exportingCsv ? <CircularProgress size={20} /> : <CsvIcon />}\n            </ListItemIcon>\n            <ListItemText>Exportar para CSV</ListItemText>\n          </MenuItem>\n        )}\n      </Menu>\n    </>\n  );\n};\n\nexport default ExportButton;"],"names":["ExportButton","onExportPdf","onExportCsv","disabled","size","variant","anchorEl","setAnchorEl","useState","exportingPdf","setExportingPdf","exportingCsv","setExportingCsv","open","handleClick","event","handleClose","handleExportPdf","error","handleExportCsv","jsx","Button","CircularProgress","CsvIcon","PdfIcon","jsxs","Fragment","ButtonGroup","FileDownloadIcon","ExpandMoreIcon","Menu","MenuItem","ListItemIcon","ListItemText"],"mappings":"iKAyBA,MAAMA,EAA4C,CAAC,CACjD,YAAAC,EACA,YAAAC,EACA,SAAAC,EAAW,GACX,KAAAC,EAAO,SACP,QAAAC,EAAU,UACZ,IAAM,CACJ,KAAM,CAACC,EAAUC,CAAW,EAAIC,EAAAA,SAA6B,IAAI,EAC3D,CAACC,EAAcC,CAAe,EAAIF,EAAAA,SAAS,EAAK,EAChD,CAACG,EAAcC,CAAe,EAAIJ,EAAAA,SAAS,EAAK,EAEhDK,EAAO,EAAQP,EAEfQ,EAAeC,GAAyC,CAC5DR,EAAYQ,EAAM,aAAa,CACjC,EAEMC,EAAc,IAAM,CACxBT,EAAY,IAAI,CAClB,EAEMU,EAAkB,SAAY,CAClC,GAAKhB,EAEL,CAAAS,EAAgB,EAAI,EACpB,GAAI,CACF,MAAMT,EAAA,CACR,OAASiB,EAAO,CACd,QAAQ,MAAM,uBAAwBA,CAAK,CAC7C,QAAA,CACER,EAAgB,EAAK,EACrBM,EAAA,CACF,EACF,EAEMG,EAAkB,SAAY,CAClC,GAAKjB,EAEL,CAAAU,EAAgB,EAAI,EACpB,GAAI,CACF,MAAMV,EAAA,CACR,OAASgB,EAAO,CACd,QAAQ,MAAM,uBAAwBA,CAAK,CAC7C,QAAA,CACEN,EAAgB,EAAK,EACrBI,EAAA,CACF,EACF,EAGA,MAAI,CAACf,GAAeC,EAEhBkB,EAAAA,IAACC,EAAA,CACC,QAAAhB,EACA,KAAAD,EACA,UAAWO,EAAeS,MAACE,EAAA,CAAiB,KAAM,EAAA,CAAI,QAAMC,EAAA,EAAQ,EACpE,QAASJ,EACT,SAAUhB,GAAYQ,EACvB,SAAA,cAAA,CAAA,EAMDV,GAAe,CAACC,EAEhBkB,EAAAA,IAACC,EAAA,CACC,QAAAhB,EACA,KAAAD,EACA,UAAWK,EAAeW,MAACE,EAAA,CAAiB,KAAM,EAAA,CAAI,QAAME,EAAA,EAAQ,EACpE,QAASP,EACT,SAAUd,GAAYM,EACvB,SAAA,cAAA,CAAA,EAQHgB,EAAAA,KAAAC,WAAA,CACE,SAAA,CAAAN,EAAAA,IAACO,EAAA,CAAY,QAAAtB,EAAkB,KAAAD,EAC7B,SAAAgB,EAAAA,IAACC,EAAA,CACC,gBAAYO,EAAA,EAAiB,EAC7B,QAASd,EACT,SAAAX,EACA,cAAU0B,EAAA,EAAe,EAC1B,SAAA,UAAA,CAAA,EAGH,EAEAJ,EAAAA,KAACK,EAAA,CACC,SAAAxB,EACA,KAAAO,EACA,QAASG,EACT,aAAc,CACZ,SAAU,SACV,WAAY,OAAA,EAEd,gBAAiB,CACf,SAAU,MACV,WAAY,OAAA,EAGb,SAAA,CAAAf,GACCwB,EAAAA,KAACM,EAAA,CAAS,QAASd,EAAiB,SAAUR,EAC5C,SAAA,CAAAW,EAAAA,IAACY,EAAA,CACE,WAAeZ,EAAAA,IAACE,EAAA,CAAiB,KAAM,EAAA,CAAI,EAAKF,EAAAA,IAACI,EAAA,CAAA,CAAQ,CAAA,CAC5D,EACAJ,EAAAA,IAACa,GAAa,SAAA,mBAAA,CAAiB,CAAA,EACjC,EAED/B,GACCuB,EAAAA,KAACM,EAAA,CAAS,QAASZ,EAAiB,SAAUR,EAC5C,SAAA,CAAAS,EAAAA,IAACY,EAAA,CACE,WAAeZ,EAAAA,IAACE,EAAA,CAAiB,KAAM,EAAA,CAAI,EAAKF,EAAAA,IAACG,EAAA,CAAA,CAAQ,CAAA,CAC5D,EACAH,EAAAA,IAACa,GAAa,SAAA,mBAAA,CAAiB,CAAA,CAAA,CACjC,CAAA,CAAA,CAAA,CAEJ,EACF,CAEJ"}