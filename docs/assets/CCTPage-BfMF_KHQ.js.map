{"version":3,"file":"CCTPage-BfMF_KHQ.js","sources":["../../src/pages/CCTPage.tsx"],"sourcesContent":["/**\n * ðŸ“‹ CCTPage - MÃ³dulo de GestÃ£o de LegislaÃ§Ã£o e CCTs\n * \n * A \"Biblioteca Digital\" inteligente para CCTs que implementa:\n * - Listagem pesquisÃ¡vel com filtros poderosos\n * - Status dinÃ¢mico: Ativo, Expirado, Expirando em breve\n * - Cadastro manual e assistido por IA (upload de PDF)\n * - GestÃ£o centralizada do conhecimento de CCTs\n */\n\nimport React, { useState, useEffect } from \"react\";\nimport { \n  Container, \n  Typography, \n  Paper, \n  Box,\n  Card,\n  CardContent,\n  TextField,\n  Grid,\n  Chip,\n  Button,\n  IconButton,\n  Alert,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  CircularProgress,\n  Fab,\n  Badge,\n  Divider,\n  Stack,\n  LinearProgress\n} from \"@mui/material\";\nimport {\n  Search,\n  Add,\n  FilterList,\n  CheckCircle,\n  Warning,\n  Error,\n  Info,\n  UploadFile,\n  Save,\n  Refresh,\n  Business,\n  DateRange,\n  Description,\n  CloudUpload,\n  AutoFixHigh,\n  Visibility\n} from \"@mui/icons-material\";\n\ninterface Sindicato {\n  id: number;\n  nome_sindicato: string;\n  cnpj?: string;\n  base_territorial?: string;\n  categoria_representada?: string;\n  criado_em: string;\n}\n\ninterface CCT {\n  id: number;\n  sindicato_id: number;\n  numero_registro_mte?: string;\n  vigencia_inicio: string;\n  vigencia_fim: string;\n  link_documento_oficial?: string;\n  dados_cct?: any;\n  criado_em: string;\n  atualizado_em: string;\n}\n\ninterface CCTListResponse {\n  ccts: CCT[];\n  total: number;\n  ativas: number;\n  expiradas: number;\n  expirando_30_dias: number;\n}\n\nconst CCTPage: React.FC = () => {\n  const [ccts, setCcts] = useState<CCT[]>([]);\n  const [sindicatos, setSindicatos] = useState<Sindicato[]>([]);\n  const [stats, setStats] = useState<CCTListResponse | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedSindicato, setSelectedSindicato] = useState<number | \"\">(\"\");\n  const [filterVigencia, setFilterVigencia] = useState<string>(\"todas\");\n  \n  // Dialog states\n  const [showNewCCTDialog, setShowNewCCTDialog] = useState(false);\n  const [showUploadDialog, setShowUploadDialog] = useState(false);\n  const [selectedCCT, setSelectedCCT] = useState<CCT | null>(null);\n  \n  // Form states\n  const [uploadFile, setUploadFile] = useState<File | null>(null);\n  const [processingAI, setProcessingAI] = useState(false);\n  const [aiResults, setAIResults] = useState<any>(null);\n\n  // Load initial data\n  useEffect(() => {\n    carregarDados();\n  }, []);\n\n  // Apply filters when they change\n  useEffect(() => {\n    carregarCCTs();\n  }, [searchTerm, selectedSindicato, filterVigencia]);\n\n  const carregarDados = async () => {\n    setLoading(true);\n    try {\n      // Load syndicates\n      const sindicatosResponse = await fetch('/api/v1/sindicatos');\n      const sindicatosData = await sindicatosResponse.json();\n      setSindicatos(sindicatosData);\n\n      // Load CCTs\n      await carregarCCTs();\n    } catch (error) {\n      console.error('Erro ao carregar dados:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const carregarCCTs = async () => {\n    try {\n      let url = '/api/v1/cct?';\n      const params = new URLSearchParams();\n      \n      if (selectedSindicato) params.append('sindicato_id', selectedSindicato.toString());\n      if (searchTerm) params.append('search_text', searchTerm);\n      if (filterVigencia !== 'todas') {\n        params.append('vigente', filterVigencia === 'ativas' ? 'true' : 'false');\n      }\n      \n      const response = await fetch(`${url}${params}`);\n      const data: CCTListResponse = await response.json();\n      \n      setCcts(data.ccts);\n      setStats(data);\n    } catch (error) {\n      console.error('Erro ao carregar CCTs:', error);\n    }\n  };\n\n  const handleUploadPDF = async () => {\n    if (!uploadFile) return;\n    \n    setProcessingAI(true);\n    try {\n      const formData = new FormData();\n      formData.append('arquivo_pdf', uploadFile);\n      \n      const response = await fetch('/api/v1/legislacao/extrair-pdf', {\n        method: 'POST',\n        body: formData,\n      });\n      \n      const result = await response.json();\n      setAIResults(result);\n      \n      // Refresh data after processing\n      await carregarDados();\n    } catch (error) {\n      console.error('Erro no processamento do PDF:', error);\n    } finally {\n      setProcessingAI(false);\n    }\n  };\n\n  const getStatusChip = (cct: CCT) => {\n    const hoje = new Date();\n    const inicio = new Date(cct.vigencia_inicio);\n    const fim = new Date(cct.vigencia_fim);\n    const treintaDias = new Date();\n    treintaDias.setDate(hoje.getDate() + 30);\n    \n    if (fim < hoje) {\n      return <Chip label=\"Expirado\" color=\"error\" size=\"small\" icon={<Error />} />;\n    } else if (fim <= treintaDias) {\n      return <Chip label=\"Expirando em Breve\" color=\"warning\" size=\"small\" icon={<Warning />} />;\n    } else if (inicio <= hoje && fim >= hoje) {\n      return <Chip label=\"Ativo\" color=\"success\" size=\"small\" icon={<CheckCircle />} />;\n    } else {\n      return <Chip label=\"Futuro\" color=\"info\" size=\"small\" icon={<Info />} />;\n    }\n  };\n\n  const getSindicatoNome = (sindicato_id: number) => {\n    const sindicato = sindicatos.find(s => s.id === sindicato_id);\n    return sindicato?.nome_sindicato || 'Sindicato nÃ£o encontrado';\n  };\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ mt: 4, mb: 4 }}>\n      {/* Header with Statistics */}\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n          ðŸ“‹ CCT - ConvenÃ§Ãµes Coletivas de Trabalho\n          <Chip \n            label=\"Biblioteca Digital Inteligente\" \n            color=\"primary\" \n            size=\"small\"\n            icon={<AutoFixHigh />}\n          />\n        </Typography>\n        \n        {stats && (\n          <Grid container spacing={2} sx={{ mb: 3 }}>\n            <Grid item xs={12} sm={6} md={3}>\n              <Card>\n                <CardContent sx={{ textAlign: 'center', py: 2 }}>\n                  <Typography variant=\"h3\" color=\"primary.main\">{stats.total}</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">Total de CCTs</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n              <Card>\n                <CardContent sx={{ textAlign: 'center', py: 2 }}>\n                  <Typography variant=\"h3\" color=\"success.main\">{stats.ativas}</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">Ativas</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n              <Card>\n                <CardContent sx={{ textAlign: 'center', py: 2 }}>\n                  <Typography variant=\"h3\" color=\"warning.main\">{stats.expirando_30_dias}</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">Expirando em 30 dias</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n              <Card>\n                <CardContent sx={{ textAlign: 'center', py: 2 }}>\n                  <Typography variant=\"h3\" color=\"error.main\">{stats.expiradas}</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">Expiradas</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        )}\n      </Box>\n\n      <Grid container spacing={3}>\n        {/* Filter and Search Panel */}\n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 3, sticky: true, top: 20 }}>\n            <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n              <FilterList /> Filtros Poderosos\n            </Typography>\n            \n            <Stack spacing={3}>\n              {/* Search */}\n              <TextField\n                fullWidth\n                label=\"Busca Inteligente\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                placeholder=\"Nome do sindicato, registro MTE...\"\n                InputProps={{\n                  startAdornment: <Search sx={{ mr: 1, color: 'action.active' }} />,\n                }}\n              />\n\n              {/* Syndicate Filter */}\n              <FormControl fullWidth>\n                <InputLabel>Filtrar por Sindicato</InputLabel>\n                <Select\n                  value={selectedSindicato}\n                  label=\"Filtrar por Sindicato\"\n                  onChange={(e) => setSelectedSindicato(e.target.value as number)}\n                >\n                  <MenuItem value=\"\">Todos os Sindicatos</MenuItem>\n                  {sindicatos.map((sindicato) => (\n                    <MenuItem key={sindicato.id} value={sindicato.id}>\n                      {sindicato.nome_sindicato}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n\n              {/* Validity Filter */}\n              <FormControl fullWidth>\n                <InputLabel>Filtrar por VigÃªncia</InputLabel>\n                <Select\n                  value={filterVigencia}\n                  label=\"Filtrar por VigÃªncia\"\n                  onChange={(e) => setFilterVigencia(e.target.value)}\n                >\n                  <MenuItem value=\"todas\">Todas as CCTs</MenuItem>\n                  <MenuItem value=\"ativas\">Apenas Ativas</MenuItem>\n                  <MenuItem value=\"expiradas\">Apenas Expiradas</MenuItem>\n                </Select>\n              </FormControl>\n\n              <Divider />\n\n              {/* Action Buttons */}\n              <Stack spacing={2}>\n                <Button\n                  variant=\"contained\"\n                  startIcon={<Add />}\n                  onClick={() => setShowNewCCTDialog(true)}\n                  fullWidth\n                >\n                  Cadastrar Nova CCT\n                </Button>\n                \n                <Button\n                  variant=\"outlined\"\n                  startIcon={<CloudUpload />}\n                  onClick={() => setShowUploadDialog(true)}\n                  fullWidth\n                  color=\"secondary\"\n                >\n                  Upload com IA\n                </Button>\n                \n                <Button\n                  variant=\"text\"\n                  startIcon={<Refresh />}\n                  onClick={carregarDados}\n                  fullWidth\n                  disabled={loading}\n                >\n                  Atualizar Dados\n                </Button>\n              </Stack>\n            </Stack>\n          </Paper>\n        </Grid>\n\n        {/* CCT List */}\n        <Grid item xs={12} md={8}>\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              ðŸ“‹ Resultados ({stats?.total || 0} CCTs encontradas)\n            </Typography>\n            \n            {loading && <LinearProgress sx={{ mb: 2 }} />}\n            \n            {ccts.length === 0 && !loading ? (\n              <Alert severity=\"info\" sx={{ my: 3 }}>\n                <Typography variant=\"subtitle1\">Nenhuma CCT encontrada</Typography>\n                <Typography variant=\"body2\">\n                  Comece cadastrando um novo sindicato e sua CCT, ou faÃ§a upload de um PDF para anÃ¡lise automÃ¡tica.\n                </Typography>\n              </Alert>\n            ) : (\n              <Grid container spacing={2}>\n                {ccts.map((cct) => (\n                  <Grid item xs={12} key={cct.id}>\n                    <Card \n                      sx={{ \n                        cursor: 'pointer',\n                        transition: 'all 0.2s',\n                        '&:hover': { \n                          boxShadow: 3,\n                          transform: 'translateY(-2px)'\n                        },\n                      }}\n                      onClick={() => setSelectedCCT(cct)}\n                    >\n                      <CardContent>\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>\n                          <Box sx={{ flexGrow: 1 }}>\n                            <Typography variant=\"h6\" color=\"primary\" gutterBottom>\n                              {getSindicatoNome(cct.sindicato_id)}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"text.secondary\">\n                              <Business fontSize=\"small\" sx={{ mr: 1, verticalAlign: 'middle' }} />\n                              Registro MTE: {cct.numero_registro_mte || 'NÃ£o informado'}\n                            </Typography>\n                          </Box>\n                          {getStatusChip(cct)}\n                        </Box>\n                        \n                        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 1 }}>\n                          <DateRange fontSize=\"small\" color=\"action\" />\n                          <Typography variant=\"body2\">\n                            VigÃªncia: {new Date(cct.vigencia_inicio).toLocaleDateString()} atÃ© {new Date(cct.vigencia_fim).toLocaleDateString()}\n                          </Typography>\n                        </Box>\n                        \n                        {cct.dados_cct && (\n                          <Box sx={{ mt: 2 }}>\n                            <Typography variant=\"caption\" color=\"text.secondary\">\n                              ðŸ“Š Dados estruturados disponÃ­veis â€¢ Processado pela IA\n                            </Typography>\n                          </Box>\n                        )}\n                      </CardContent>\n                    </Card>\n                  </Grid>\n                ))}\n              </Grid>\n            )}\n          </Paper>\n        </Grid>\n      </Grid>\n\n      {/* Upload Dialog */}\n      <Dialog \n        open={showUploadDialog} \n        onClose={() => setShowUploadDialog(false)}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>\n          ðŸ¤– Cadastro Assistido por IA\n        </DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body1\" sx={{ mb: 3 }}>\n            Arraste o PDF da CCT ou da Lei para que nossa IA extraia os dados automaticamente.\n          </Typography>\n          \n          <Box\n            sx={{\n              border: '2px dashed',\n              borderColor: uploadFile ? 'primary.main' : 'grey.300',\n              borderRadius: 2,\n              p: 4,\n              textAlign: 'center',\n              cursor: 'pointer',\n              transition: 'all 0.2s',\n              '&:hover': {\n                borderColor: 'primary.main',\n                backgroundColor: 'action.hover'\n              }\n            }}\n            onClick={() => document.getElementById('file-upload')?.click()}\n          >\n            <input\n              id=\"file-upload\"\n              type=\"file\"\n              accept=\".pdf\"\n              hidden\n              onChange={(e) => setUploadFile(e.target.files?.[0] || null)}\n            />\n            <CloudUpload sx={{ fontSize: 48, color: 'primary.main', mb: 2 }} />\n            <Typography variant=\"h6\" gutterBottom>\n              {uploadFile ? `âœ“ ${uploadFile.name}` : 'Clique ou arraste um PDF aqui'}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Formatos aceitos: PDF (mÃ¡ximo 50MB)\n            </Typography>\n          </Box>\n\n          {processingAI && (\n            <Box sx={{ mt: 3, textAlign: 'center' }}>\n              <CircularProgress />\n              <Typography variant=\"body2\" sx={{ mt: 2 }}>\n                ðŸ§  Processando com IA... Analisando documento e extraindo dados estruturados\n              </Typography>\n            </Box>\n          )}\n\n          {aiResults && (\n            <Alert severity=\"success\" sx={{ mt: 3 }}>\n              <Typography variant=\"subtitle1\">âœ“ Processamento ConcluÃ­do!</Typography>\n              <Typography variant=\"body2\">\n                Documento processado com {(aiResults.confidence_score * 100).toFixed(1)}% de confianÃ§a.\n                Os dados extraÃ­dos estÃ£o prontos para validaÃ§Ã£o.\n              </Typography>\n            </Alert>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShowUploadDialog(false)}>\n            Cancelar\n          </Button>\n          <Button \n            variant=\"contained\" \n            onClick={handleUploadPDF}\n            disabled={!uploadFile || processingAI}\n            startIcon={processingAI ? <CircularProgress size={20} /> : <AutoFixHigh />}\n          >\n            {processingAI ? 'Processando...' : 'Processar com IA'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* CCT Details Dialog */}\n      {selectedCCT && (\n        <Dialog \n          open={Boolean(selectedCCT)} \n          onClose={() => setSelectedCCT(null)}\n          maxWidth=\"lg\"\n          fullWidth\n        >\n          <DialogTitle>\n            ðŸ“‹ Detalhes da CCT - {getSindicatoNome(selectedCCT.sindicato_id)}\n          </DialogTitle>\n          <DialogContent>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <Typography variant=\"subtitle2\" gutterBottom>InformaÃ§Ãµes BÃ¡sicas:</Typography>\n                <List dense>\n                  <ListItem>\n                    <ListItemIcon><Business /></ListItemIcon>\n                    <ListItemText \n                      primary=\"Sindicato\" \n                      secondary={getSindicatoNome(selectedCCT.sindicato_id)}\n                    />\n                  </ListItem>\n                  <ListItem>\n                    <ListItemIcon><Description /></ListItemIcon>\n                    <ListItemText \n                      primary=\"Registro MTE\" \n                      secondary={selectedCCT.numero_registro_mte || 'NÃ£o informado'}\n                    />\n                  </ListItem>\n                  <ListItem>\n                    <ListItemIcon><DateRange /></ListItemIcon>\n                    <ListItemText \n                      primary=\"VigÃªncia\" \n                      secondary={`${new Date(selectedCCT.vigencia_inicio).toLocaleDateString()} - ${new Date(selectedCCT.vigencia_fim).toLocaleDateString()}`}\n                    />\n                  </ListItem>\n                </List>\n              </Grid>\n              \n              <Grid item xs={12} md={6}>\n                <Typography variant=\"subtitle2\" gutterBottom>Status:</Typography>\n                <Box sx={{ mb: 2 }}>{getStatusChip(selectedCCT)}</Box>\n                \n                {selectedCCT.dados_cct && (\n                  <>\n                    <Typography variant=\"subtitle2\" gutterBottom>Dados Estruturados (IA):</Typography>\n                    <Box sx={{ backgroundColor: 'grey.50', p: 2, borderRadius: 1 }}>\n                      <Typography variant=\"caption\" component=\"pre\" sx={{ fontSize: '0.75rem' }}>\n                        {JSON.stringify(selectedCCT.dados_cct, null, 2)}\n                      </Typography>\n                    </Box>\n                  </>\n                )}\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setSelectedCCT(null)}>Fechar</Button>\n            {selectedCCT.link_documento_oficial && (\n              <Button \n                variant=\"contained\" \n                startIcon={<Visibility />}\n                href={selectedCCT.link_documento_oficial}\n                target=\"_blank\"\n              >\n                Ver Documento Oficial\n              </Button>\n            )}\n          </DialogActions>\n        </Dialog>\n      )}\n    </Container>\n  );\n};\n\nexport default CCTPage;\n"],"names":["CCTPage","ccts","setCcts","useState","sindicatos","setSindicatos","stats","setStats","loading","setLoading","searchTerm","setSearchTerm","selectedSindicato","setSelectedSindicato","filterVigencia","setFilterVigencia","showNewCCTDialog","setShowNewCCTDialog","showUploadDialog","setShowUploadDialog","selectedCCT","setSelectedCCT","uploadFile","setUploadFile","processingAI","setProcessingAI","aiResults","setAIResults","useEffect","carregarDados","carregarCCTs","sindicatosData","error","url","params","data","handleUploadPDF","formData","result","getStatusChip","cct","hoje","inicio","fim","treintaDias","jsx","Chip","Error","Warning","CheckCircle","Info","getSindicatoNome","sindicato_id","sindicato","s","jsxs","Container","Box","Typography","AutoFixHigh","Grid","Card","CardContent","Paper","FilterList","Stack","TextField","e","Search","FormControl","InputLabel","Select","MenuItem","Divider","Button","Add","CloudUpload","Refresh","LinearProgress","Alert","Business","DateRange","Dialog","DialogTitle","DialogContent","_a","CircularProgress","DialogActions","List","ListItem","ListItemIcon","ListItemText","Description","Fragment","Visibility"],"mappings":"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"}