{"version":3,"file":"GestaoLegislacaoPage-RLsGJB2g.js","sources":["../../src/pages/GestaoLegislacaoPage.tsx"],"sourcesContent":["/**\n * GestaoLegislacaoPage - Sistema Central de Gestão de Legislação\n * \n * Implementa o \"Repositório Central\" inteligente para todas as regras de negócio:\n * - Upload e processamento de PDFs com IA\n * - Listagem e busca avançada de documentos\n * - Integração com o módulo de CCTs\n * - Base de conhecimento ativa que alimenta toda a plataforma\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { \n  Container, \n  Typography, \n  Box, \n  Card, \n  CardContent, \n  Alert,\n  Grid,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Chip,\n  Button,\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  CircularProgress,\n  LinearProgress,\n  Stack,\n  IconButton,\n  Tooltip,\n  Divider\n} from '@mui/material';\nimport {\n  CloudUpload,\n  Description,\n  Search,\n  FilterList,\n  Add,\n  Visibility,\n  AutoAwesome,\n  CheckCircle,\n  Warning,\n  Error,\n  Info,\n  Refresh,\n  Download,\n  EditNote\n} from '@mui/icons-material';\n\ninterface LegislacaoDocumento {\n  id: number;\n  titulo: string;\n  tipo_documento: string;\n  numero_documento?: string;\n  data_publicacao?: string;\n  orgao_emissor?: string;\n  arquivo_pdf?: string;\n  dados_extraidos?: any;\n  status_processamento: string;\n  criado_em: string;\n  processado_em?: string;\n}\n\ninterface ExtrairPDFResponse {\n  documento_id: number;\n  dados_extraidos: any;\n  confidence_score: number;\n  processamento_tempo_segundos: number;\n  sugestoes_validacao: string[];\n}\n\nconst tiposDocumento = [\n  { value: 'lei', label: 'Lei' },\n  { value: 'decreto', label: 'Decreto' },\n  { value: 'cct', label: 'Convenção Coletiva (CCT)' },\n  { value: 'medida_provisoria', label: 'Medida Provisória' },\n  { value: 'portaria', label: 'Portaria' },\n  { value: 'resolucao', label: 'Resolução' }\n];\n\nconst statusProcessamento = [\n  { value: 'pendente', label: 'Pendente', color: 'default' as const },\n  { value: 'processando', label: 'Processando', color: 'warning' as const },\n  { value: 'concluido', label: 'Concluído', color: 'success' as const },\n  { value: 'erro', label: 'Erro', color: 'error' as const }\n];\n\nexport const GestaoLegislacaoPage: React.FC = () => {\n  const [documentos, setDocumentos] = useState<LegislacaoDocumento[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [uploadDialogOpen, setUploadDialogOpen] = useState(false);\n  const [manualDialogOpen, setManualDialogOpen] = useState(false);\n  const [selectedDocument, setSelectedDocument] = useState<LegislacaoDocumento | null>(null);\n  \n  // Filters\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterTipo, setFilterTipo] = useState<string>('');\n  const [filterStatus, setFilterStatus] = useState<string>('');\n  \n  // Upload state\n  const [uploadFile, setUploadFile] = useState<File | null>(null);\n  const [processing, setProcessing] = useState(false);\n  const [aiResults, setAIResults] = useState<ExtrairPDFResponse | null>(null);\n  \n  // Manual form state\n  const [manualForm, setManualForm] = useState({\n    titulo: '',\n    tipo_documento: 'lei',\n    numero_documento: '',\n    data_publicacao: '',\n    orgao_emissor: ''\n  });\n\n  useEffect(() => {\n    carregarDocumentos();\n  }, []);\n\n  useEffect(() => {\n    carregarDocumentos();\n  }, [searchTerm, filterTipo, filterStatus]);\n\n  const carregarDocumentos = async () => {\n    setLoading(true);\n    try {\n      let url = '/api/v1/legislacao?';\n      const params = new URLSearchParams();\n      \n      if (filterTipo) params.append('tipo_documento', filterTipo);\n      if (filterStatus) params.append('status', filterStatus);\n      if (searchTerm) params.append('search_text', searchTerm);\n      \n      const response = await fetch(`${url}${params}`);\n      const data = await response.json();\n      setDocumentos(data);\n    } catch (error) {\n      console.error('Erro ao carregar documentos:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleUploadPDF = async () => {\n    if (!uploadFile) return;\n    \n    setProcessing(true);\n    try {\n      const formData = new FormData();\n      formData.append('arquivo_pdf', uploadFile);\n      \n      const response = await fetch('/api/v1/legislacao/extrair-pdf', {\n        method: 'POST',\n        body: formData,\n      });\n      \n      const result: ExtrairPDFResponse = await response.json();\n      setAIResults(result);\n      \n      // Refresh documents list\n      await carregarDocumentos();\n    } catch (error) {\n      console.error('Erro no processamento do PDF:', error);\n    } finally {\n      setProcessing(false);\n    }\n  };\n\n  const handleManualSubmit = async () => {\n    try {\n      const response = await fetch('/api/v1/legislacao', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(manualForm),\n      });\n      \n      await response.json();\n      \n      // Reset form and close dialog\n      setManualForm({\n        titulo: '',\n        tipo_documento: 'lei',\n        numero_documento: '',\n        data_publicacao: '',\n        orgao_emissor: ''\n      });\n      setManualDialogOpen(false);\n      \n      // Refresh documents list\n      await carregarDocumentos();\n    } catch (error) {\n      console.error('Erro ao criar documento:', error);\n    }\n  };\n\n  const getStatusChip = (status: string) => {\n    const statusInfo = statusProcessamento.find(s => s.value === status);\n    if (!statusInfo) return <Chip label={status} size=\"small\" />;\n    \n    const icons = {\n      pendente: <Info />,\n      processando: <CircularProgress size={16} />,\n      concluido: <CheckCircle />,\n      erro: <Error />\n    };\n    \n    return (\n      <Chip \n        label={statusInfo.label} \n        color={statusInfo.color} \n        size=\"small\"\n        icon={icons[status as keyof typeof icons]}\n      />\n    );\n  };\n\n  const getTipoDocumentoLabel = (tipo: string) => {\n    const tipoInfo = tiposDocumento.find(t => t.value === tipo);\n    return tipoInfo?.label || tipo;\n  };\n\n  const handleUploadSuccess = (fileName: string) => {\n    alert(`Ficheiro \"${fileName}\" enviado com sucesso! A aguardar processamento.`);\n    carregarDocumentos();\n  };\n\n  return (\n    <Container maxWidth=\"xl\" sx={{ mt: 4, mb: 4 }}>\n      {/* Header */}\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n          📚 Gestão de Legislação\n          <Chip \n            label=\"Base de Conhecimento Ativa\" \n            color=\"primary\" \n            size=\"small\"\n            icon={<AutoAwesome />}\n          />\n        </Typography>\n        \n        <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n          Sistema inteligente para transformar arquivos de legislação em conhecimento estruturado que alimenta toda a plataforma AUDITORIA360\n        </Typography>\n        \n        {/* Statistics Cards */}\n        <Grid container spacing={2} sx={{ mb: 3 }}>\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent sx={{ textAlign: 'center', py: 2 }}>\n                <Typography variant=\"h3\" color=\"primary.main\">{documentos.length}</Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">Total Documentos</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent sx={{ textAlign: 'center', py: 2 }}>\n                <Typography variant=\"h3\" color=\"success.main\">\n                  {documentos.filter(d => d.status_processamento === 'concluido').length}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">Processados</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent sx={{ textAlign: 'center', py: 2 }}>\n                <Typography variant=\"h3\" color=\"warning.main\">\n                  {documentos.filter(d => d.status_processamento === 'processando').length}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">Em Processamento</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <Card>\n              <CardContent sx={{ textAlign: 'center', py: 2 }}>\n                <Typography variant=\"h3\" color=\"secondary.main\">\n                  {documentos.filter(d => d.tipo_documento === 'cct').length}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">CCTs</Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n\n      <Grid container spacing={3}>\n        {/* Filters and Actions Panel */}\n        <Grid item xs={12} md={4}>\n          <Paper sx={{ p: 3, sticky: true, top: 20 }}>\n            <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n              <FilterList /> Filtros e Ações\n            </Typography>\n            \n            <Stack spacing={3}>\n              {/* Search */}\n              <TextField\n                fullWidth\n                label=\"Buscar Documentos\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                placeholder=\"Título, número, órgão emissor...\"\n                InputProps={{\n                  startAdornment: <Search sx={{ mr: 1, color: 'action.active' }} />,\n                }}\n              />\n\n              {/* Type Filter */}\n              <FormControl fullWidth>\n                <InputLabel>Tipo de Documento</InputLabel>\n                <Select\n                  value={filterTipo}\n                  label=\"Tipo de Documento\"\n                  onChange={(e) => setFilterTipo(e.target.value)}\n                >\n                  <MenuItem value=\"\">Todos os Tipos</MenuItem>\n                  {tiposDocumento.map((tipo) => (\n                    <MenuItem key={tipo.value} value={tipo.value}>\n                      {tipo.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n\n              {/* Status Filter */}\n              <FormControl fullWidth>\n                <InputLabel>Status</InputLabel>\n                <Select\n                  value={filterStatus}\n                  label=\"Status\"\n                  onChange={(e) => setFilterStatus(e.target.value)}\n                >\n                  <MenuItem value=\"\">Todos os Status</MenuItem>\n                  {statusProcessamento.map((status) => (\n                    <MenuItem key={status.value} value={status.value}>\n                      {status.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n\n              <Divider />\n\n              {/* Action Buttons */}\n              <Stack spacing={2}>\n                <Button\n                  variant=\"contained\"\n                  startIcon={<CloudUpload />}\n                  onClick={() => setUploadDialogOpen(true)}\n                  fullWidth\n                >\n                  📤 Upload com IA\n                </Button>\n                \n                <Button\n                  variant=\"outlined\"\n                  startIcon={<Add />}\n                  onClick={() => setManualDialogOpen(true)}\n                  fullWidth\n                >\n                  ✏️ Cadastro Manual\n                </Button>\n                \n                <Button\n                  variant=\"text\"\n                  startIcon={<Refresh />}\n                  onClick={carregarDocumentos}\n                  fullWidth\n                  disabled={loading}\n                >\n                  🔄 Atualizar Lista\n                </Button>\n              </Stack>\n            </Stack>\n          </Paper>\n        </Grid>\n\n        {/* Documents Table */}\n        <Grid item xs={12} md={8}>\n          <Paper sx={{ p: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              📋 Documentos Cadastrados ({documentos.length})\n            </Typography>\n            \n            {loading && <LinearProgress sx={{ mb: 2 }} />}\n            \n            {documentos.length === 0 && !loading ? (\n              <Alert severity=\"info\" sx={{ my: 3 }}>\n                <Typography variant=\"subtitle1\">Nenhum documento encontrado</Typography>\n                <Typography variant=\"body2\">\n                  Comece fazendo upload de um PDF ou cadastrando um documento manualmente.\n                </Typography>\n              </Alert>\n            ) : (\n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Título</TableCell>\n                      <TableCell>Tipo</TableCell>\n                      <TableCell>Status</TableCell>\n                      <TableCell>Processado</TableCell>\n                      <TableCell>Ações</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {documentos.map((documento) => (\n                      <TableRow key={documento.id}>\n                        <TableCell>\n                          <Box>\n                            <Typography variant=\"subtitle2\">\n                              {documento.titulo}\n                            </Typography>\n                            {documento.numero_documento && (\n                              <Typography variant=\"caption\" color=\"text.secondary\">\n                                {documento.numero_documento}\n                              </Typography>\n                            )}\n                          </Box>\n                        </TableCell>\n                        <TableCell>\n                          <Chip \n                            label={getTipoDocumentoLabel(documento.tipo_documento)}\n                            size=\"small\"\n                            variant=\"outlined\"\n                          />\n                        </TableCell>\n                        <TableCell>\n                          {getStatusChip(documento.status_processamento)}\n                        </TableCell>\n                        <TableCell>\n                          <Typography variant=\"body2\" color=\"text.secondary\">\n                            {documento.processado_em \n                              ? new Date(documento.processado_em).toLocaleDateString()\n                              : '-'\n                            }\n                          </Typography>\n                        </TableCell>\n                        <TableCell>\n                          <Stack direction=\"row\" spacing={1}>\n                            <Tooltip title=\"Ver Detalhes\">\n                              <IconButton\n                                size=\"small\"\n                                onClick={() => setSelectedDocument(documento)}\n                              >\n                                <Visibility />\n                              </IconButton>\n                            </Tooltip>\n                            {documento.dados_extraidos && (\n                              <Tooltip title=\"Dados IA Disponíveis\">\n                                <IconButton size=\"small\" color=\"primary\">\n                                  <AutoAwesome />\n                                </IconButton>\n                              </Tooltip>\n                            )}\n                          </Stack>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            )}\n          </Paper>\n        </Grid>\n      </Grid>\n\n      {/* Upload Dialog */}\n      <Dialog \n        open={uploadDialogOpen} \n        onClose={() => setUploadDialogOpen(false)}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>\n          🤖 Upload Inteligente com IA\n        </DialogTitle>\n        <DialogContent>\n          <Typography variant=\"body1\" sx={{ mb: 3 }}>\n            Faça upload do PDF de legislação para que nossa IA extraia automaticamente os dados estruturados.\n          </Typography>\n          \n          <Box\n            sx={{\n              border: '2px dashed',\n              borderColor: uploadFile ? 'primary.main' : 'grey.300',\n              borderRadius: 2,\n              p: 4,\n              textAlign: 'center',\n              cursor: 'pointer',\n              transition: 'all 0.2s',\n              '&:hover': {\n                borderColor: 'primary.main',\n                backgroundColor: 'action.hover'\n              }\n            }}\n            onClick={() => document.getElementById('legislation-file-upload')?.click()}\n          >\n            <input\n              id=\"legislation-file-upload\"\n              type=\"file\"\n              accept=\".pdf\"\n              hidden\n              onChange={(e) => setUploadFile(e.target.files?.[0] || null)}\n            />\n            <CloudUpload sx={{ fontSize: 48, color: 'primary.main', mb: 2 }} />\n            <Typography variant=\"h6\" gutterBottom>\n              {uploadFile ? `✓ ${uploadFile.name}` : 'Selecione um arquivo PDF'}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              A IA irá classificar, extrair e estruturar os dados automaticamente\n            </Typography>\n          </Box>\n\n          {processing && (\n            <Box sx={{ mt: 3, textAlign: 'center' }}>\n              <CircularProgress />\n              <Typography variant=\"body2\" sx={{ mt: 2 }}>\n                🧠 Processando com IA... \n                <br />\n                Classificando documento e extraindo dados estruturados\n              </Typography>\n            </Box>\n          )}\n\n          {aiResults && (\n            <Alert severity=\"success\" sx={{ mt: 3 }}>\n              <Typography variant=\"subtitle1\">✅ Processamento Concluído!</Typography>\n              <Typography variant=\"body2\">\n                Documento processado com {(aiResults.confidence_score * 100).toFixed(1)}% de confiança \n                em {aiResults.processamento_tempo_segundos.toFixed(1)}s.\n              </Typography>\n              {aiResults.sugestoes_validacao.length > 0 && (\n                <Box sx={{ mt: 2 }}>\n                  <Typography variant=\"caption\" display=\"block\">\n                    💡 Sugestões de validação:\n                  </Typography>\n                  {aiResults.sugestoes_validacao.map((sugestao, index) => (\n                    <Typography key={index} variant=\"caption\" display=\"block\" sx={{ ml: 2 }}>\n                      • {sugestao}\n                    </Typography>\n                  ))}\n                </Box>\n              )}\n            </Alert>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setUploadDialogOpen(false)}>\n            Cancelar\n          </Button>\n          <Button \n            variant=\"contained\" \n            onClick={handleUploadPDF}\n            disabled={!uploadFile || processing}\n            startIcon={processing ? <CircularProgress size={20} /> : <AutoAwesome />}\n          >\n            {processing ? 'Processando...' : '🧠 Processar com IA'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Manual Entry Dialog */}\n      <Dialog \n        open={manualDialogOpen} \n        onClose={() => setManualDialogOpen(false)}\n        maxWidth=\"md\"\n        fullWidth\n      >\n        <DialogTitle>\n          ✏️ Cadastro Manual de Documento\n        </DialogTitle>\n        <DialogContent>\n          <Grid container spacing={3} sx={{ mt: 1 }}>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Título do Documento\"\n                value={manualForm.titulo}\n                onChange={(e) => setManualForm({...manualForm, titulo: e.target.value})}\n                required\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <FormControl fullWidth required>\n                <InputLabel>Tipo de Documento</InputLabel>\n                <Select\n                  value={manualForm.tipo_documento}\n                  label=\"Tipo de Documento\"\n                  onChange={(e) => setManualForm({...manualForm, tipo_documento: e.target.value})}\n                >\n                  {tiposDocumento.map((tipo) => (\n                    <MenuItem key={tipo.value} value={tipo.value}>\n                      {tipo.label}\n                    </MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Número/Código\"\n                value={manualForm.numero_documento}\n                onChange={(e) => setManualForm({...manualForm, numero_documento: e.target.value})}\n                placeholder=\"Ex: Lei 14.442/2022\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Data de Publicação\"\n                type=\"date\"\n                value={manualForm.data_publicacao}\n                onChange={(e) => setManualForm({...manualForm, data_publicacao: e.target.value})}\n                InputLabelProps={{ shrink: true }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                fullWidth\n                label=\"Órgão Emissor\"\n                value={manualForm.orgao_emissor}\n                onChange={(e) => setManualForm({...manualForm, orgao_emissor: e.target.value})}\n                placeholder=\"Ex: Ministério do Trabalho\"\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setManualDialogOpen(false)}>\n            Cancelar\n          </Button>\n          <Button \n            variant=\"contained\" \n            onClick={handleManualSubmit}\n            disabled={!manualForm.titulo}\n            startIcon={<Save />}\n          >\n            Salvar Documento\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/* Document Details Dialog */}\n      {selectedDocument && (\n        <Dialog \n          open={Boolean(selectedDocument)} \n          onClose={() => setSelectedDocument(null)}\n          maxWidth=\"lg\"\n          fullWidth\n        >\n          <DialogTitle>\n            📄 Detalhes do Documento\n          </DialogTitle>\n          <DialogContent>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={6}>\n                <Typography variant=\"subtitle2\" gutterBottom>Informações Básicas:</Typography>\n                <Box sx={{ mb: 2 }}>\n                  <Typography variant=\"h6\">{selectedDocument.titulo}</Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {getTipoDocumentoLabel(selectedDocument.tipo_documento)}\n                    {selectedDocument.numero_documento && ` • ${selectedDocument.numero_documento}`}\n                  </Typography>\n                  {selectedDocument.orgao_emissor && (\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {selectedDocument.orgao_emissor}\n                    </Typography>\n                  )}\n                  {selectedDocument.data_publicacao && (\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Publicado em: {new Date(selectedDocument.data_publicacao).toLocaleDateString()}\n                    </Typography>\n                  )}\n                </Box>\n                <Box sx={{ mb: 2 }}>\n                  {getStatusChip(selectedDocument.status_processamento)}\n                </Box>\n              </Grid>\n              \n              <Grid item xs={12} md={6}>\n                {selectedDocument.dados_extraidos && (\n                  <>\n                    <Typography variant=\"subtitle2\" gutterBottom>📊 Dados Extraídos pela IA:</Typography>\n                    <Box sx={{ backgroundColor: 'grey.50', p: 2, borderRadius: 1, maxHeight: 400, overflow: 'auto' }}>\n                      <Typography variant=\"caption\" component=\"pre\" sx={{ fontSize: '0.75rem', whiteSpace: 'pre-wrap' }}>\n                        {JSON.stringify(selectedDocument.dados_extraidos, null, 2)}\n                      </Typography>\n                    </Box>\n                  </>\n                )}\n              </Grid>\n            </Grid>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => setSelectedDocument(null)}>\n              Fechar\n            </Button>\n          </DialogActions>\n        </Dialog>\n      )}\n    </Container>\n  );\n};"],"names":["tiposDocumento","statusProcessamento","GestaoLegislacaoPage","documentos","setDocumentos","useState","loading","setLoading","uploadDialogOpen","setUploadDialogOpen","manualDialogOpen","setManualDialogOpen","selectedDocument","setSelectedDocument","searchTerm","setSearchTerm","filterTipo","setFilterTipo","filterStatus","setFilterStatus","uploadFile","setUploadFile","processing","setProcessing","aiResults","setAIResults","manualForm","setManualForm","useEffect","carregarDocumentos","url","params","data","error","handleUploadPDF","formData","result","handleManualSubmit","getStatusChip","status","statusInfo","s","jsx","Chip","icons","Info","CircularProgress","CheckCircle","Error","getTipoDocumentoLabel","tipo","tipoInfo","t","jsxs","Container","Box","Typography","AutoAwesome","Grid","Card","CardContent","d","Paper","FilterList","Stack","TextField","e","Search","FormControl","InputLabel","Select","MenuItem","Divider","Button","CloudUpload","Add","Refresh","LinearProgress","Alert","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","documento","Tooltip","IconButton","Visibility","Dialog","DialogTitle","DialogContent","_a","sugestao","index","DialogActions","Fragment"],"mappings":"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"}