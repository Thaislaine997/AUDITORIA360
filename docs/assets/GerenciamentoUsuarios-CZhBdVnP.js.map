{"version":3,"file":"GerenciamentoUsuarios-CZhBdVnP.js","sources":["../../src/pages/GerenciamentoUsuarios.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Container,\n  Typography,\n  Box,\n  Paper,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Chip,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Grid,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Tab,\n  Tabs,\n} from \"@mui/material\";\nimport {\n  Add,\n  Edit,\n  Delete,\n  Person,\n  PersonAdd,\n  Security,\n} from \"@mui/icons-material\";\nimport { useAuthStore } from \"../stores/authStore\";\n\ninterface Usuario {\n  id: string;\n  nome: string;\n  email: string;\n  role: \"super_admin\" | \"contabilidade\" | \"cliente_final\";\n  contabilidade?: string;\n  status: \"ativo\" | \"inativo\";\n  ultimoAcesso: string;\n}\n\nconst GerenciamentoUsuarios: React.FC = () => {\n  const { user } = useAuthStore();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [editingId, setEditingId] = useState<string | null>(null);\n  const [tabValue, setTabValue] = useState(0);\n\n  // Mock data\n  const [usuarios, setUsuarios] = useState<Usuario[]>([\n    {\n      id: \"1\",\n      nome: \"João Admin\",\n      email: \"admin@auditoria360.com\",\n      role: \"super_admin\",\n      status: \"ativo\",\n      ultimoAcesso: \"2024-01-15\",\n    },\n    {\n      id: \"2\",\n      nome: \"Maria Gestora\",\n      email: \"maria@alpha.com.br\",\n      role: \"contabilidade\",\n      contabilidade: \"Contabilidade Alpha\",\n      status: \"ativo\",\n      ultimoAcesso: \"2024-01-14\",\n    },\n    {\n      id: \"3\",\n      nome: \"Carlos Cliente\",\n      email: \"carlos@empresa.com.br\",\n      role: \"cliente_final\",\n      contabilidade: \"Contabilidade Alpha\",\n      status: \"ativo\",\n      ultimoAcesso: \"2024-01-13\",\n    },\n  ]);\n\n  // Check permissions\n  const hasPermission = user?.role === \"super_admin\" || user?.role === \"contabilidade\";\n\n  if (!hasPermission) {\n    return (\n      <Container maxWidth=\"xl\">\n        <Box sx={{ textAlign: \"center\", mt: 8 }}>\n          <Typography variant=\"h5\" color=\"error\">\n            Acesso Negado\n          </Typography>\n          <Typography variant=\"body1\" color=\"text.secondary\">\n            Esta funcionalidade é restrita a Gestores e Super Administradores.\n          </Typography>\n        </Box>\n      </Container>\n    );\n  }\n\n  const handleEdit = (id: string) => {\n    setEditingId(id);\n    setOpenDialog(true);\n  };\n\n  const handleAdd = () => {\n    setEditingId(null);\n    setOpenDialog(true);\n  };\n\n  const handleDelete = (id: string) => {\n    if (confirm(\"Tem certeza que deseja excluir este usuário?\")) {\n      setUsuarios(prev => prev.filter(u => u.id !== id));\n    }\n  };\n\n  const getRoleLabel = (role: string) => {\n    switch (role) {\n      case \"super_admin\": return \"Super Admin\";\n      case \"contabilidade\": return \"Gestor\";\n      case \"cliente_final\": return \"Cliente\";\n      default: return role;\n    }\n  };\n\n  const getRoleColor = (role: string) => {\n    switch (role) {\n      case \"super_admin\": return \"error\";\n      case \"contabilidade\": return \"warning\";\n      case \"cliente_final\": return \"info\";\n      default: return \"default\";\n    }\n  };\n\n  // Filter users based on current user role\n  const filteredUsuarios = user?.role === \"super_admin\" \n    ? usuarios \n    : usuarios.filter(usuario => \n        // Gestor only sees users from their contabilidade\n        usuario.contabilidade === user?.name // In real app, this would be proper filtering\n      );\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Gerenciamento de Usuários\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"text.secondary\">\n          {user?.role === \"super_admin\" \n            ? \"Gerencie todos os usuários do sistema.\" \n            : \"Gerencie os usuários da sua contabilidade.\"\n          }\n        </Typography>\n      </Box>\n\n      <Paper sx={{ p: 3 }}>\n        <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", mb: 3 }}>\n          <Typography variant=\"h6\">\n            Usuários Cadastrados ({filteredUsuarios.length})\n          </Typography>\n          <Button\n            variant=\"contained\"\n            startIcon={<PersonAdd />}\n            onClick={handleAdd}\n          >\n            Novo Usuário\n          </Button>\n        </Box>\n\n        <Tabs \n          value={tabValue} \n          onChange={(_, newValue) => setTabValue(newValue)}\n          sx={{ mb: 3 }}\n        >\n          <Tab label=\"Todos\" />\n          <Tab label=\"Administradores\" />\n          <Tab label=\"Gestores\" />\n          <Tab label=\"Clientes\" />\n        </Tabs>\n\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Nome</TableCell>\n                <TableCell>Email</TableCell>\n                <TableCell>Tipo</TableCell>\n                {user?.role === \"super_admin\" && <TableCell>Contabilidade</TableCell>}\n                <TableCell>Status</TableCell>\n                <TableCell>Último Acesso</TableCell>\n                <TableCell align=\"center\">Ações</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {filteredUsuarios.map((usuario) => (\n                <TableRow key={usuario.id}>\n                  <TableCell>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1 }}>\n                      <Person color=\"primary\" />\n                      {usuario.nome}\n                    </Box>\n                  </TableCell>\n                  <TableCell>{usuario.email}</TableCell>\n                  <TableCell>\n                    <Chip \n                      label={getRoleLabel(usuario.role)}\n                      color={getRoleColor(usuario.role) as any}\n                      size=\"small\"\n                      icon={usuario.role === \"super_admin\" ? <Security /> : undefined}\n                    />\n                  </TableCell>\n                  {user?.role === \"super_admin\" && (\n                    <TableCell>{usuario.contabilidade || \"-\"}</TableCell>\n                  )}\n                  <TableCell>\n                    <Chip \n                      label={usuario.status}\n                      color={usuario.status === \"ativo\" ? \"success\" : \"error\"}\n                      size=\"small\"\n                    />\n                  </TableCell>\n                  <TableCell>{new Date(usuario.ultimoAcesso).toLocaleDateString()}</TableCell>\n                  <TableCell align=\"center\">\n                    <IconButton \n                      size=\"small\" \n                      color=\"primary\"\n                      onClick={() => handleEdit(usuario.id)}\n                    >\n                      <Edit />\n                    </IconButton>\n                    {usuario.role !== \"super_admin\" && (\n                      <IconButton \n                        size=\"small\" \n                        color=\"error\"\n                        onClick={() => handleDelete(usuario.id)}\n                      >\n                        <Delete />\n                      </IconButton>\n                    )}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n\n      {/* Dialog for add/edit */}\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"md\" fullWidth>\n        <DialogTitle>\n          {editingId ? \"Editar Usuário\" : \"Novo Usuário\"}\n        </DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Nome Completo\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Email\"\n                type=\"email\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <FormControl fullWidth>\n                <InputLabel>Tipo de Usuário</InputLabel>\n                <Select\n                  label=\"Tipo de Usuário\"\n                  defaultValue=\"\"\n                >\n                  {user?.role === \"super_admin\" && (\n                    <MenuItem value=\"super_admin\">Super Admin</MenuItem>\n                  )}\n                  <MenuItem value=\"contabilidade\">Gestor</MenuItem>\n                  <MenuItem value=\"cliente_final\">Cliente</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <FormControl fullWidth>\n                <InputLabel>Contabilidade</InputLabel>\n                <Select\n                  label=\"Contabilidade\"\n                  defaultValue=\"\"\n                >\n                  <MenuItem value=\"alpha\">Contabilidade Alpha</MenuItem>\n                  <MenuItem value=\"beta\">Beta Assessoria</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label=\"Senha Temporária\"\n                type=\"password\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <FormControl fullWidth>\n                <InputLabel>Status</InputLabel>\n                <Select\n                  label=\"Status\"\n                  defaultValue=\"ativo\"\n                >\n                  <MenuItem value=\"ativo\">Ativo</MenuItem>\n                  <MenuItem value=\"inativo\">Inativo</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenDialog(false)}>\n            Cancelar\n          </Button>\n          <Button variant=\"contained\" onClick={() => setOpenDialog(false)}>\n            Salvar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default GerenciamentoUsuarios;"],"names":["GerenciamentoUsuarios","user","useAuthStore","openDialog","setOpenDialog","useState","editingId","setEditingId","tabValue","setTabValue","usuarios","setUsuarios","jsx","Container","jsxs","Box","Typography","handleEdit","id","handleAdd","handleDelete","prev","u","getRoleLabel","role","getRoleColor","filteredUsuarios","usuario","Paper","Button","PersonAdd","Tabs","_","newValue","Tab","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Person","Chip","Security","IconButton","Edit","Delete","Dialog","DialogTitle","DialogContent","Grid","TextField","FormControl","InputLabel","Select","MenuItem","DialogActions"],"mappings":"iXAgDA,MAAMA,GAAkC,IAAM,CAC5C,KAAM,CAAE,KAAAC,CAAA,EAASC,EAAA,EACX,CAACC,EAAYC,CAAa,EAAIC,EAAAA,SAAS,EAAK,EAC5C,CAACC,EAAWC,CAAY,EAAIF,EAAAA,SAAwB,IAAI,EACxD,CAACG,EAAUC,CAAW,EAAIJ,EAAAA,SAAS,CAAC,EAGpC,CAACK,EAAUC,CAAW,EAAIN,WAAoB,CAClD,CACE,GAAI,IACJ,KAAM,aACN,MAAO,yBACP,KAAM,cACN,OAAQ,QACR,aAAc,YAAA,EAEhB,CACE,GAAI,IACJ,KAAM,gBACN,MAAO,qBACP,KAAM,gBACN,cAAe,sBACf,OAAQ,QACR,aAAc,YAAA,EAEhB,CACE,GAAI,IACJ,KAAM,iBACN,MAAO,wBACP,KAAM,gBACN,cAAe,sBACf,OAAQ,QACR,aAAc,YAAA,CAChB,CACD,EAKD,GAAI,GAFkBJ,GAAA,YAAAA,EAAM,QAAS,gBAAiBA,GAAA,YAAAA,EAAM,QAAS,iBAGnE,OACEW,EAAAA,IAACC,EAAA,CAAU,SAAS,KAClB,SAAAC,OAACC,EAAA,CAAI,GAAI,CAAE,UAAW,SAAU,GAAI,CAAA,EAClC,SAAA,CAAAH,MAACI,EAAA,CAAW,QAAQ,KAAK,MAAM,QAAQ,SAAA,gBAEvC,QACCA,EAAA,CAAW,QAAQ,QAAQ,MAAM,iBAAiB,SAAA,oEAAA,CAEnD,CAAA,CAAA,CACF,CAAA,CACF,EAIJ,MAAMC,EAAcC,GAAe,CACjCX,EAAaW,CAAE,EACfd,EAAc,EAAI,CACpB,EAEMe,EAAY,IAAM,CACtBZ,EAAa,IAAI,EACjBH,EAAc,EAAI,CACpB,EAEMgB,EAAgBF,GAAe,CAC/B,QAAQ,8CAA8C,GACxDP,KAAoBU,EAAK,UAAYC,EAAE,KAAOJ,CAAE,CAAC,CAErD,EAEMK,EAAgBC,GAAiB,CACrC,OAAQA,EAAA,CACN,IAAK,cAAe,MAAO,cAC3B,IAAK,gBAAiB,MAAO,SAC7B,IAAK,gBAAiB,MAAO,UAC7B,QAAS,OAAOA,CAAA,CAEpB,EAEMC,EAAgBD,GAAiB,CACrC,OAAQA,EAAA,CACN,IAAK,cAAe,MAAO,QAC3B,IAAK,gBAAiB,MAAO,UAC7B,IAAK,gBAAiB,MAAO,OAC7B,QAAS,MAAO,SAAA,CAEpB,EAGME,GAAmBzB,GAAA,YAAAA,EAAM,QAAS,cACpCS,EACAA,EAAS,OAAOiB,GAEdA,EAAQ,iBAAkB1B,GAAA,YAAAA,EAAM,KAAA,EAGtC,OACEa,EAAAA,KAACD,EAAA,CAAU,SAAS,KAClB,SAAA,CAAAC,EAAAA,KAACC,EAAA,CAAI,GAAI,CAAE,GAAI,GACb,SAAA,CAAAH,EAAAA,IAACI,GAAW,QAAQ,KAAK,UAAU,KAAK,aAAY,GAAC,SAAA,2BAAA,CAErD,EACAJ,EAAAA,IAACI,EAAA,CAAW,QAAQ,YAAY,MAAM,iBACnC,UAAAf,GAAA,YAAAA,EAAM,QAAS,cACZ,yCACA,4CAAA,CAEN,CAAA,EACF,SAEC2B,EAAA,CAAM,GAAI,CAAE,EAAG,GACd,SAAA,CAAAd,EAAAA,KAACC,EAAA,CAAI,GAAI,CAAE,QAAS,OAAQ,eAAgB,gBAAiB,WAAY,SAAU,GAAI,CAAA,EACrF,SAAA,CAAAD,EAAAA,KAACE,EAAA,CAAW,QAAQ,KAAK,SAAA,CAAA,yBACAU,EAAiB,OAAO,GAAA,EACjD,EACAd,EAAAA,IAACiB,EAAA,CACC,QAAQ,YACR,gBAAYC,EAAA,EAAU,EACtB,QAASX,EACV,SAAA,cAAA,CAAA,CAED,EACF,EAEAL,EAAAA,KAACiB,EAAA,CACC,MAAOvB,EACP,SAAU,CAACwB,EAAGC,IAAaxB,EAAYwB,CAAQ,EAC/C,GAAI,CAAE,GAAI,CAAA,EAEV,SAAA,CAAArB,EAAAA,IAACsB,EAAA,CAAI,MAAM,OAAA,CAAQ,EACnBtB,EAAAA,IAACsB,EAAA,CAAI,MAAM,iBAAA,CAAkB,EAC7BtB,EAAAA,IAACsB,EAAA,CAAI,MAAM,UAAA,CAAW,EACtBtB,EAAAA,IAACsB,EAAA,CAAI,MAAM,UAAA,CAAW,CAAA,CAAA,CAAA,EAGxBtB,EAAAA,IAACuB,EAAA,CACC,SAAArB,EAAAA,KAACsB,EAAA,CACC,SAAA,CAAAxB,EAAAA,IAACyB,EAAA,CACC,gBAACC,EAAA,CACC,SAAA,CAAA1B,EAAAA,IAAC2B,GAAU,SAAA,MAAA,CAAI,EACf3B,EAAAA,IAAC2B,GAAU,SAAA,OAAA,CAAK,EAChB3B,EAAAA,IAAC2B,GAAU,SAAA,MAAA,CAAI,GACdtC,GAAA,YAAAA,EAAM,QAAS,eAAiBW,EAAAA,IAAC2B,GAAU,SAAA,gBAAa,EACzD3B,EAAAA,IAAC2B,GAAU,SAAA,QAAA,CAAM,EACjB3B,EAAAA,IAAC2B,GAAU,SAAA,eAAA,CAAa,EACxB3B,EAAAA,IAAC2B,EAAA,CAAU,MAAM,SAAS,SAAA,OAAA,CAAK,CAAA,CAAA,CACjC,CAAA,CACF,QACCC,EAAA,CACE,SAAAd,EAAiB,IAAKC,UACpBW,EAAA,CACC,SAAA,CAAA1B,EAAAA,IAAC2B,EAAA,CACC,SAAAzB,EAAAA,KAACC,EAAA,CAAI,GAAI,CAAE,QAAS,OAAQ,WAAY,SAAU,IAAK,CAAA,EACrD,SAAA,CAAAH,EAAAA,IAAC6B,EAAA,CAAO,MAAM,SAAA,CAAU,EACvBd,EAAQ,IAAA,CAAA,CACX,CAAA,CACF,EACAf,EAAAA,IAAC2B,EAAA,CAAW,SAAAZ,EAAQ,KAAA,CAAM,QACzBY,EAAA,CACC,SAAA3B,EAAAA,IAAC8B,EAAA,CACC,MAAOnB,EAAaI,EAAQ,IAAI,EAChC,MAAOF,EAAaE,EAAQ,IAAI,EAChC,KAAK,QACL,KAAMA,EAAQ,OAAS,cAAgBf,EAAAA,IAAC+B,IAAS,EAAK,MAAA,CAAA,EAE1D,GACC1C,GAAA,YAAAA,EAAM,QAAS,qBACbsC,EAAA,CAAW,SAAAZ,EAAQ,eAAiB,IAAI,QAE1CY,EAAA,CACC,SAAA3B,EAAAA,IAAC8B,EAAA,CACC,MAAOf,EAAQ,OACf,MAAOA,EAAQ,SAAW,QAAU,UAAY,QAChD,KAAK,OAAA,CAAA,EAET,EACAf,MAAC2B,GAAW,SAAA,IAAI,KAAKZ,EAAQ,YAAY,EAAE,qBAAqB,EAChEb,EAAAA,KAACyB,EAAA,CAAU,MAAM,SACf,SAAA,CAAA3B,EAAAA,IAACgC,EAAA,CACC,KAAK,QACL,MAAM,UACN,QAAS,IAAM3B,EAAWU,EAAQ,EAAE,EAEpC,eAACkB,EAAA,CAAA,CAAK,CAAA,CAAA,EAEPlB,EAAQ,OAAS,eAChBf,EAAAA,IAACgC,EAAA,CACC,KAAK,QACL,MAAM,QACN,QAAS,IAAMxB,EAAaO,EAAQ,EAAE,EAEtC,eAACmB,EAAA,CAAA,CAAO,CAAA,CAAA,CACV,CAAA,CAEJ,CAAA,GA5CanB,EAAQ,EA6CvB,CACD,CAAA,CACH,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAGAb,EAAAA,KAACiC,EAAA,CAAO,KAAM5C,EAAY,QAAS,IAAMC,EAAc,EAAK,EAAG,SAAS,KAAK,UAAS,GACpF,SAAA,CAAAQ,EAAAA,IAACoC,EAAA,CACE,SAAA1C,EAAY,iBAAmB,eAClC,EACAM,EAAAA,IAACqC,EAAA,CACC,SAAAnC,EAAAA,KAACoC,EAAA,CAAK,UAAS,GAAC,QAAS,EAAG,GAAI,CAAE,GAAI,CAAA,EACpC,SAAA,CAAAtC,MAACsC,GAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAAtC,EAAAA,IAACuC,EAAA,CACC,UAAS,GACT,MAAM,gBACN,QAAQ,UAAA,CAAA,EAEZ,QACCD,EAAA,CAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAAtC,EAAAA,IAACuC,EAAA,CACC,UAAS,GACT,MAAM,QACN,KAAK,QACL,QAAQ,UAAA,CAAA,EAEZ,EACAvC,EAAAA,IAACsC,EAAA,CAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAApC,EAAAA,KAACsC,EAAA,CAAY,UAAS,GACpB,SAAA,CAAAxC,EAAAA,IAACyC,GAAW,SAAA,iBAAA,CAAe,EAC3BvC,EAAAA,KAACwC,EAAA,CACC,MAAM,kBACN,aAAa,GAEZ,SAAA,EAAArD,GAAA,YAAAA,EAAM,QAAS,eACdW,MAAC2C,EAAA,CAAS,MAAM,cAAc,SAAA,cAAW,EAE3C3C,EAAAA,IAAC2C,EAAA,CAAS,MAAM,gBAAgB,SAAA,SAAM,EACtC3C,EAAAA,IAAC2C,EAAA,CAAS,MAAM,gBAAgB,SAAA,SAAA,CAAO,CAAA,CAAA,CAAA,CACzC,CAAA,CACF,CAAA,CACF,EACA3C,EAAAA,IAACsC,EAAA,CAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAApC,EAAAA,KAACsC,EAAA,CAAY,UAAS,GACpB,SAAA,CAAAxC,EAAAA,IAACyC,GAAW,SAAA,eAAA,CAAa,EACzBvC,EAAAA,KAACwC,EAAA,CACC,MAAM,gBACN,aAAa,GAEb,SAAA,CAAA1C,EAAAA,IAAC2C,EAAA,CAAS,MAAM,QAAQ,SAAA,sBAAmB,EAC3C3C,EAAAA,IAAC2C,EAAA,CAAS,MAAM,OAAO,SAAA,iBAAA,CAAe,CAAA,CAAA,CAAA,CACxC,CAAA,CACF,CAAA,CACF,QACCL,EAAA,CAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAAtC,EAAAA,IAACuC,EAAA,CACC,UAAS,GACT,MAAM,mBACN,KAAK,WACL,QAAQ,UAAA,CAAA,EAEZ,EACAvC,EAAAA,IAACsC,EAAA,CAAK,KAAI,GAAC,GAAI,GAAI,GAAI,EACrB,SAAApC,EAAAA,KAACsC,EAAA,CAAY,UAAS,GACpB,SAAA,CAAAxC,EAAAA,IAACyC,GAAW,SAAA,QAAA,CAAM,EAClBvC,EAAAA,KAACwC,EAAA,CACC,MAAM,SACN,aAAa,QAEb,SAAA,CAAA1C,EAAAA,IAAC2C,EAAA,CAAS,MAAM,QAAQ,SAAA,QAAK,EAC7B3C,EAAAA,IAAC2C,EAAA,CAAS,MAAM,UAAU,SAAA,SAAA,CAAO,CAAA,CAAA,CAAA,CACnC,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,SACCC,EAAA,CACC,SAAA,CAAA5C,MAACiB,GAAO,QAAS,IAAMzB,EAAc,EAAK,EAAG,SAAA,WAE7C,EACAQ,EAAAA,IAACiB,GAAO,QAAQ,YAAY,QAAS,IAAMzB,EAAc,EAAK,EAAG,SAAA,QAAA,CAEjE,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,CAEJ"}