{"version":3,"file":"RelatoriosAvancados-Bt2ccKkp.js","sources":["../../src/pages/RelatoriosAvancados.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Container,\n  Typography,\n  Box,\n  Paper,\n  Button,\n  Grid,\n  Card,\n  CardContent,\n  CardActions,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Chip,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n} from \"@mui/material\";\nimport {\n  Add,\n  BarChart,\n  FilterList,\n  GetApp,\n  DateRange,\n  TrendingUp,\n  Assessment,\n  PieChart,\n  Edit,\n  Delete,\n} from \"@mui/icons-material\";\n\ninterface Relatorio {\n  id: string;\n  nome: string;\n  descricao: string;\n  tipo: \"dashboard\" | \"tabela\" | \"grafico\";\n  categoria: \"folha\" | \"auditoria\" | \"compliance\" | \"financeiro\";\n  ultimaGeracao: string;\n  status: \"ativo\" | \"rascunho\";\n}\n\nconst RelatoriosAvancados: React.FC = () => {\n  const [openDialog, setOpenDialog] = useState(false);\n  const [selectedPeriod, setSelectedPeriod] = useState(\"mes_atual\");\n  const [selectedCategory, setSelectedCategory] = useState(\"todos\");\n\n  const [relatorios, setRelatorios] = useState<Relatorio[]>([\n    {\n      id: \"1\",\n      nome: \"Análise de Folha Mensal\",\n      descricao: \"Relatório detalhado dos custos de folha por departamento\",\n      tipo: \"dashboard\",\n      categoria: \"folha\",\n      ultimaGeracao: \"2024-01-15\",\n      status: \"ativo\",\n    },\n    {\n      id: \"2\",\n      nome: \"Conformidade Trabalhista\",\n      descricao: \"Auditoria de conformidade com legislação trabalhista\",\n      tipo: \"tabela\",\n      categoria: \"compliance\",\n      ultimaGeracao: \"2024-01-14\",\n      status: \"ativo\",\n    },\n    {\n      id: \"3\",\n      nome: \"KPIs de Auditoria\",\n      descricao: \"Indicadores de performance das auditorias realizadas\",\n      tipo: \"grafico\",\n      categoria: \"auditoria\",\n      ultimaGeracao: \"2024-01-13\",\n      status: \"rascunho\",\n    },\n  ]);\n\n  const handleGenerate = (relatorioId: string) => {\n    console.log(`Gerando relatório ${relatorioId}...`);\n    // Simulate report generation\n  };\n\n  const getTypeIcon = (tipo: string) => {\n    switch (tipo) {\n      case \"dashboard\": return <Assessment color=\"primary\" />;\n      case \"tabela\": return <BarChart color=\"secondary\" />;\n      case \"grafico\": return <PieChart color=\"success\" />;\n      default: return <BarChart />;\n    }\n  };\n\n  const getTypeColor = (tipo: string) => {\n    switch (tipo) {\n      case \"dashboard\": return \"primary\";\n      case \"tabela\": return \"secondary\";\n      case \"grafico\": return \"success\";\n      default: return \"default\";\n    }\n  };\n\n  const getCategoryLabel = (categoria: string) => {\n    switch (categoria) {\n      case \"folha\": return \"Folha de Pagamento\";\n      case \"auditoria\": return \"Auditoria\";\n      case \"compliance\": return \"Compliance\";\n      case \"financeiro\": return \"Financeiro\";\n      default: return categoria;\n    }\n  };\n\n  const quickReports = [\n    {\n      nome: \"Folha Atual vs Anterior\",\n      descricao: \"Comparativo mensal de folha\",\n      icon: <TrendingUp />,\n    },\n    {\n      nome: \"Riscos Identificados\",\n      descricao: \"Relatório de riscos em aberto\",\n      icon: <Assessment />,\n    },\n    {\n      nome: \"Conformidade Mensal\",\n      descricao: \"Status de conformidade atual\",\n      icon: <BarChart />,\n    },\n  ];\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Relatórios Avançados\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"text.secondary\">\n          Construa e visualize relatórios personalizados para análises profundas.\n        </Typography>\n      </Box>\n\n      <Grid container spacing={3}>\n        {/* Quick Reports */}\n        <Grid item xs={12}>\n          <Paper sx={{ p: 3, mb: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>\n              Relatórios Rápidos\n            </Typography>\n            <Grid container spacing={2}>\n              {quickReports.map((report, index) => (\n                <Grid item xs={12} md={4} key={index}>\n                  <Card>\n                    <CardContent>\n                      <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2, mb: 2 }}>\n                        {report.icon}\n                        <Typography variant=\"h6\" component=\"div\">\n                          {report.nome}\n                        </Typography>\n                      </Box>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        {report.descricao}\n                      </Typography>\n                    </CardContent>\n                    <CardActions>\n                      <Button size=\"small\" startIcon={<GetApp />}>\n                        Gerar\n                      </Button>\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Paper>\n        </Grid>\n\n        {/* Filters */}\n        <Grid item xs={12}>\n          <Paper sx={{ p: 3 }}>\n            <Box sx={{ display: \"flex\", gap: 2, mb: 3, alignItems: \"center\" }}>\n              <FormControl size=\"small\" sx={{ minWidth: 200 }}>\n                <InputLabel>Período</InputLabel>\n                <Select\n                  value={selectedPeriod}\n                  label=\"Período\"\n                  onChange={(e) => setSelectedPeriod(e.target.value)}\n                >\n                  <MenuItem value=\"mes_atual\">Mês Atual</MenuItem>\n                  <MenuItem value=\"mes_anterior\">Mês Anterior</MenuItem>\n                  <MenuItem value=\"trimestre\">Trimestre</MenuItem>\n                  <MenuItem value=\"ano\">Ano</MenuItem>\n                  <MenuItem value=\"personalizado\">Personalizado</MenuItem>\n                </Select>\n              </FormControl>\n\n              <FormControl size=\"small\" sx={{ minWidth: 200 }}>\n                <InputLabel>Categoria</InputLabel>\n                <Select\n                  value={selectedCategory}\n                  label=\"Categoria\"\n                  onChange={(e) => setSelectedCategory(e.target.value)}\n                >\n                  <MenuItem value=\"todos\">Todos</MenuItem>\n                  <MenuItem value=\"folha\">Folha de Pagamento</MenuItem>\n                  <MenuItem value=\"auditoria\">Auditoria</MenuItem>\n                  <MenuItem value=\"compliance\">Compliance</MenuItem>\n                  <MenuItem value=\"financeiro\">Financeiro</MenuItem>\n                </Select>\n              </FormControl>\n\n              <Button\n                variant=\"outlined\"\n                startIcon={<FilterList />}\n                sx={{ ml: \"auto\" }}\n              >\n                Mais Filtros\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                startIcon={<Add />}\n                onClick={() => setOpenDialog(true)}\n              >\n                Novo Relatório\n              </Button>\n            </Box>\n\n            {/* Custom Reports List */}\n            <Typography variant=\"h6\" gutterBottom>\n              Relatórios Personalizados\n            </Typography>\n            \n            <List>\n              {relatorios.map((relatorio) => (\n                <ListItem key={relatorio.id} divider>\n                  <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 2, flex: 1 }}>\n                    {getTypeIcon(relatorio.tipo)}\n                    <Box sx={{ flex: 1 }}>\n                      <ListItemText\n                        primary={relatorio.nome}\n                        secondary={relatorio.descricao}\n                      />\n                      <Box sx={{ display: \"flex\", gap: 1, mt: 1 }}>\n                        <Chip \n                          label={relatorio.tipo}\n                          color={getTypeColor(relatorio.tipo) as any}\n                          size=\"small\"\n                        />\n                        <Chip \n                          label={getCategoryLabel(relatorio.categoria)}\n                          variant=\"outlined\"\n                          size=\"small\"\n                        />\n                        <Chip \n                          label={relatorio.status}\n                          color={relatorio.status === \"ativo\" ? \"success\" : \"warning\"}\n                          size=\"small\"\n                        />\n                      </Box>\n                    </Box>\n                  </Box>\n                  \n                  <ListItemSecondaryAction>\n                    <Box sx={{ display: \"flex\", gap: 1 }}>\n                      <Button\n                        size=\"small\"\n                        variant=\"contained\"\n                        startIcon={<GetApp />}\n                        onClick={() => handleGenerate(relatorio.id)}\n                      >\n                        Gerar\n                      </Button>\n                      <IconButton size=\"small\" color=\"primary\">\n                        <Edit />\n                      </IconButton>\n                      <IconButton size=\"small\" color=\"error\">\n                        <Delete />\n                      </IconButton>\n                    </Box>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              ))}\n            </List>\n          </Paper>\n        </Grid>\n      </Grid>\n\n      {/* Dialog for creating new report */}\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)} maxWidth=\"md\" fullWidth>\n        <DialogTitle>Novo Relatório Personalizado</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2} sx={{ mt: 1 }}>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Nome do Relatório\"\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                fullWidth\n                label=\"Descrição\"\n                multiline\n                rows={3}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <FormControl fullWidth>\n                <InputLabel>Tipo de Visualização</InputLabel>\n                <Select\n                  label=\"Tipo de Visualização\"\n                  defaultValue=\"\"\n                >\n                  <MenuItem value=\"dashboard\">Dashboard</MenuItem>\n                  <MenuItem value=\"tabela\">Tabela</MenuItem>\n                  <MenuItem value=\"grafico\">Gráfico</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <FormControl fullWidth>\n                <InputLabel>Categoria</InputLabel>\n                <Select\n                  label=\"Categoria\"\n                  defaultValue=\"\"\n                >\n                  <MenuItem value=\"folha\">Folha de Pagamento</MenuItem>\n                  <MenuItem value=\"auditoria\">Auditoria</MenuItem>\n                  <MenuItem value=\"compliance\">Compliance</MenuItem>\n                  <MenuItem value=\"financeiro\">Financeiro</MenuItem>\n                </Select>\n              </FormControl>\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setOpenDialog(false)}>\n            Cancelar\n          </Button>\n          <Button variant=\"contained\" onClick={() => setOpenDialog(false)}>\n            Criar Relatório\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default RelatoriosAvancados;"],"names":["RelatoriosAvancados","openDialog","setOpenDialog","useState","selectedPeriod","setSelectedPeriod","selectedCategory","setSelectedCategory","relatorios","setRelatorios","handleGenerate","relatorioId","getTypeIcon","tipo","jsx","Assessment","BarChart","PieChart","getTypeColor","getCategoryLabel","categoria","quickReports","TrendingUp","jsxs","Container","Box","Typography","Grid","Paper","report","index","Card","CardContent","CardActions","Button","GetApp","FormControl","InputLabel","Select","e","MenuItem","FilterList","Add","List","relatorio","ListItem","ListItemText","Chip","ListItemSecondaryAction","IconButton","Edit","Delete","Dialog","DialogTitle","DialogContent","TextField","DialogActions"],"mappings":"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"}