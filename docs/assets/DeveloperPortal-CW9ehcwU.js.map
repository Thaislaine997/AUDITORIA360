{"version":3,"file":"DeveloperPortal-CW9ehcwU.js","sources":["../../src/pages/DeveloperPortal.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Typography,\n  Grid,\n  Paper,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardActions,\n  TextField,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Chip,\n  IconButton,\n  Tooltip,\n  Alert,\n  Tabs,\n  Tab,\n  Link,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n} from \"@mui/material\";\nimport {\n  Add,\n  ContentCopy,\n  Delete,\n  Visibility,\n  VisibilityOff,\n  Code,\n  Description,\n  Security,\n  Analytics,\n  ExpandMore,\n  Launch,\n  Key,\n  Monitor,\n} from \"@mui/icons-material\";\n\ninterface APIKey {\n  id: string;\n  name: string;\n  key: string;\n  createdAt: string;\n  lastUsed: string;\n  requestCount: number;\n  status: 'active' | 'revoked';\n  permissions: string[];\n}\n\ninterface APIUsageLog {\n  timestamp: string;\n  endpoint: string;\n  method: string;\n  statusCode: number;\n  responseTime: number;\n  userAgent: string;\n}\n\nconst DeveloperPortal: React.FC = () => {\n  const [activeTab, setActiveTab] = useState(0);\n  const [apiKeys, setApiKeys] = useState<APIKey[]>([]);\n  const [usageLogs, setUsageLogs] = useState<APIUsageLog[]>([]);\n  const [showCreateKeyDialog, setShowCreateKeyDialog] = useState(false);\n  const [newKeyName, setNewKeyName] = useState(\"\");\n  const [selectedPermissions, setSelectedPermissions] = useState<string[]>([]);\n  const [visibleKeys, setVisibleKeys] = useState<Set<string>>(new Set());\n\n  // Mock data initialization\n  useEffect(() => {\n    setApiKeys([\n      {\n        id: \"key-1\",\n        name: \"Produ√ß√£o Principal\",\n        key: \"ak_prod_1234567890abcdef\",\n        createdAt: \"2024-01-15\",\n        lastUsed: \"2024-01-20\",\n        requestCount: 15420,\n        status: \"active\",\n        permissions: [\"read:employees\", \"read:payroll\", \"write:reports\"]\n      },\n      {\n        id: \"key-2\",\n        name: \"Desenvolvimento\",\n        key: \"ak_dev_abcdef1234567890\",\n        createdAt: \"2024-01-10\",\n        lastUsed: \"2024-01-19\",\n        requestCount: 2340,\n        status: \"active\",\n        permissions: [\"read:employees\", \"read:payroll\"]\n      }\n    ]);\n\n    setUsageLogs([\n      {\n        timestamp: \"2024-01-20 14:30:22\",\n        endpoint: \"/api/v1/employees\",\n        method: \"GET\",\n        statusCode: 200,\n        responseTime: 145,\n        userAgent: \"AUDITORIA360-SDK/1.0\"\n      },\n      {\n        timestamp: \"2024-01-20 14:28:15\",\n        endpoint: \"/api/v1/payroll/calculate\",\n        method: \"POST\",\n        statusCode: 200,\n        responseTime: 892,\n        userAgent: \"PostmanRuntime/7.26.8\"\n      },\n      {\n        timestamp: \"2024-01-20 14:25:03\",\n        endpoint: \"/api/v1/reports\",\n        method: \"GET\",\n        statusCode: 200,\n        responseTime: 234,\n        userAgent: \"AUDITORIA360-SDK/1.0\"\n      }\n    ]);\n  }, []);\n\n  const handleCreateKey = () => {\n    if (!newKeyName.trim()) return;\n\n    const newKey: APIKey = {\n      id: `key-${Date.now()}`,\n      name: newKeyName,\n      key: `ak_${Math.random().toString(36).substr(2, 16)}`,\n      createdAt: new Date().toISOString().split('T')[0],\n      lastUsed: \"Nunca\",\n      requestCount: 0,\n      status: \"active\",\n      permissions: selectedPermissions\n    };\n\n    setApiKeys([...apiKeys, newKey]);\n    setShowCreateKeyDialog(false);\n    setNewKeyName(\"\");\n    setSelectedPermissions([]);\n  };\n\n  const toggleKeyVisibility = (keyId: string) => {\n    const newVisible = new Set(visibleKeys);\n    if (newVisible.has(keyId)) {\n      newVisible.delete(keyId);\n    } else {\n      newVisible.add(keyId);\n    }\n    setVisibleKeys(newVisible);\n  };\n\n  const copyToClipboard = (text: string) => {\n    navigator.clipboard.writeText(text);\n    // In a real app, show success toast\n    console.log(\"Copied to clipboard:\", text);\n  };\n\n  const revokeKey = (keyId: string) => {\n    setApiKeys(apiKeys.map(key => \n      key.id === keyId ? { ...key, status: 'revoked' as const } : key\n    ));\n  };\n\n  const availablePermissions = [\n    \"read:employees\",\n    \"write:employees\", \n    \"read:payroll\",\n    \"write:payroll\",\n    \"read:reports\",\n    \"write:reports\",\n    \"read:audit\",\n    \"write:audit\",\n    \"admin:all\"\n  ];\n\n  const TabPanel = ({ children, value, index }: any) => (\n    <div hidden={value !== index}>\n      {value === index && <Box sx={{ py: 3 }}>{children}</Box>}\n    </div>\n  );\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      {/* Header */}\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" gutterBottom sx={{ display: 'flex', alignItems: 'center' }}>\n          <Code sx={{ mr: 2 }} />\n          Portal de Desenvolvedores\n        </Typography>\n        <Typography variant=\"subtitle1\" color=\"text.secondary\">\n          Gerencie suas chaves de API, monitore o uso e acesse a documenta√ß√£o\n        </Typography>\n      </Box>\n\n      {/* Info Card */}\n      <Alert severity=\"info\" sx={{ mb: 3 }}>\n        <Typography variant=\"body2\">\n          üöÄ <strong>API-as-a-Product</strong> - Nossa API est√° dispon√≠vel para integra√ß√£o com seus sistemas. \n          Crie chaves de API seguras e monitore seu uso em tempo real.\n        </Typography>\n      </Alert>\n\n      {/* Tabs */}\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n        <Tabs value={activeTab} onChange={(_, newValue) => setActiveTab(newValue)}>\n          <Tab icon={<Key />} label=\"Chaves de API\" />\n          <Tab icon={<Monitor />} label=\"Logs de Uso\" />\n          <Tab icon={<Description />} label=\"Documenta√ß√£o\" />\n          <Tab icon={<Analytics />} label=\"Estat√≠sticas\" />\n        </Tabs>\n      </Box>\n\n      {/* API Keys Tab */}\n      <TabPanel value={activeTab} index={0}>\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n          <Typography variant=\"h6\">Suas Chaves de API</Typography>\n          <Button\n            variant=\"contained\"\n            startIcon={<Add />}\n            onClick={() => setShowCreateKeyDialog(true)}\n          >\n            Nova Chave\n          </Button>\n        </Box>\n\n        <Grid container spacing={3}>\n          {apiKeys.map((apiKey) => (\n            <Grid item xs={12} key={apiKey.id}>\n              <Card sx={{ \n                border: apiKey.status === 'revoked' ? '1px solid #f44336' : '1px solid #e0e0e0',\n                opacity: apiKey.status === 'revoked' ? 0.6 : 1\n              }}>\n                <CardContent>\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', mb: 2 }}>\n                    <Box>\n                      <Typography variant=\"h6\">{apiKey.name}</Typography>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Criada em {apiKey.createdAt} ‚Ä¢ √öltimo uso: {apiKey.lastUsed}\n                      </Typography>\n                    </Box>\n                    <Chip \n                      label={apiKey.status === 'active' ? 'Ativa' : 'Revogada'}\n                      color={apiKey.status === 'active' ? 'success' : 'error'}\n                      size=\"small\"\n                    />\n                  </Box>\n\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                    <TextField\n                      fullWidth\n                      value={visibleKeys.has(apiKey.id) ? apiKey.key : '‚Ä¢'.repeat(20)}\n                      InputProps={{\n                        readOnly: true,\n                        endAdornment: (\n                          <Box sx={{ display: 'flex', gap: 1 }}>\n                            <Tooltip title={visibleKeys.has(apiKey.id) ? \"Ocultar\" : \"Mostrar\"}>\n                              <IconButton onClick={() => toggleKeyVisibility(apiKey.id)}>\n                                {visibleKeys.has(apiKey.id) ? <VisibilityOff /> : <Visibility />}\n                              </IconButton>\n                            </Tooltip>\n                            <Tooltip title=\"Copiar\">\n                              <IconButton onClick={() => copyToClipboard(apiKey.key)}>\n                                <ContentCopy />\n                              </IconButton>\n                            </Tooltip>\n                          </Box>\n                        )\n                      }}\n                    />\n                  </Box>\n\n                  <Box sx={{ mb: 2 }}>\n                    <Typography variant=\"body2\" sx={{ mb: 1 }}>Permiss√µes:</Typography>\n                    <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                      {apiKey.permissions.map((permission) => (\n                        <Chip key={permission} label={permission} size=\"small\" variant=\"outlined\" />\n                      ))}\n                    </Box>\n                  </Box>\n\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    {apiKey.requestCount.toLocaleString()} requisi√ß√µes realizadas\n                  </Typography>\n                </CardContent>\n\n                {apiKey.status === 'active' && (\n                  <CardActions>\n                    <Button \n                      size=\"small\" \n                      color=\"error\"\n                      startIcon={<Delete />}\n                      onClick={() => revokeKey(apiKey.id)}\n                    >\n                      Revogar\n                    </Button>\n                  </CardActions>\n                )}\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </TabPanel>\n\n      {/* Usage Logs Tab */}\n      <TabPanel value={activeTab} index={1}>\n        <Typography variant=\"h6\" sx={{ mb: 3 }}>Logs de Uso da API</Typography>\n        \n        <TableContainer component={Paper}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Timestamp</TableCell>\n                <TableCell>Endpoint</TableCell>\n                <TableCell>M√©todo</TableCell>\n                <TableCell>Status</TableCell>\n                <TableCell>Tempo (ms)</TableCell>\n                <TableCell>User Agent</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {usageLogs.map((log, index) => (\n                <TableRow key={index}>\n                  <TableCell>{log.timestamp}</TableCell>\n                  <TableCell>\n                    <code>{log.endpoint}</code>\n                  </TableCell>\n                  <TableCell>\n                    <Chip \n                      label={log.method} \n                      size=\"small\"\n                      color={log.method === 'GET' ? 'primary' : 'secondary'}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Chip \n                      label={log.statusCode}\n                      size=\"small\"\n                      color={log.statusCode === 200 ? 'success' : 'error'}\n                    />\n                  </TableCell>\n                  <TableCell>{log.responseTime}ms</TableCell>\n                  <TableCell>\n                    <code style={{ fontSize: '0.8rem' }}>{log.userAgent}</code>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </TabPanel>\n\n      {/* Documentation Tab */}\n      <TabPanel value={activeTab} index={2}>\n        <Typography variant=\"h6\" sx={{ mb: 3 }}>Documenta√ß√£o da API</Typography>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                  <Description sx={{ mr: 1 }} />\n                  Refer√™ncia da API\n                </Typography>\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                  Documenta√ß√£o completa de todos os endpoints dispon√≠veis\n                </Typography>\n                <Button \n                  variant=\"outlined\" \n                  endIcon={<Launch />}\n                  fullWidth\n                >\n                  Ver Documenta√ß√£o OpenAPI\n                </Button>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={6}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                  <Code sx={{ mr: 1 }} />\n                  SDKs e Exemplos\n                </Typography>\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                  Bibliotecas e c√≥digos de exemplo para diferentes linguagens\n                </Typography>\n                <Button \n                  variant=\"outlined\" \n                  endIcon={<Launch />}\n                  fullWidth\n                >\n                  Acessar GitHub\n                </Button>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n\n        <Box sx={{ mt: 4 }}>\n          <Typography variant=\"h6\" sx={{ mb: 2 }}>Guia de In√≠cio R√°pido</Typography>\n          \n          <Accordion>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              <Typography>1. Autentica√ß√£o</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Typography variant=\"body2\" component=\"div\">\n                <Box sx={{ mb: 2 }}>\n                  Inclua sua chave de API no header de todas as requisi√ß√µes:\n                </Box>\n                <Paper sx={{ p: 2, bgcolor: 'grey.100' }}>\n                  <code>Authorization: Bearer SUA_CHAVE_DE_API</code>\n                </Paper>\n              </Typography>\n            </AccordionDetails>\n          </Accordion>\n\n          <Accordion>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              <Typography>2. Rate Limiting</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Typography variant=\"body2\">\n                As requisi√ß√µes s√£o limitadas a 1000 por hora por chave de API. \n                O header X-RateLimit-Remaining indica quantas requisi√ß√µes restam.\n              </Typography>\n            </AccordionDetails>\n          </Accordion>\n\n          <Accordion>\n            <AccordionSummary expandIcon={<ExpandMore />}>\n              <Typography>3. Exemplo de Requisi√ß√£o</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <Paper sx={{ p: 2, bgcolor: 'grey.100' }}>\n                <code>\n                  curl -H \"Authorization: Bearer SUA_CHAVE\" <br/>\n                  https://api.auditoria360.com/v1/employees\n                </code>\n              </Paper>\n            </AccordionDetails>\n          </Accordion>\n        </Box>\n      </TabPanel>\n\n      {/* Statistics Tab */}\n      <TabPanel value={activeTab} index={3}>\n        <Typography variant=\"h6\" sx={{ mb: 3 }}>Estat√≠sticas de Uso</Typography>\n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} md={3}>\n            <Card>\n              <CardContent sx={{ textAlign: 'center' }}>\n                <Typography variant=\"h4\" color=\"primary\">\n                  {apiKeys.reduce((sum, key) => sum + key.requestCount, 0).toLocaleString()}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Total de Requisi√ß√µes\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={3}>\n            <Card>\n              <CardContent sx={{ textAlign: 'center' }}>\n                <Typography variant=\"h4\" color=\"success.main\">\n                  {apiKeys.filter(key => key.status === 'active').length}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Chaves Ativas\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={3}>\n            <Card>\n              <CardContent sx={{ textAlign: 'center' }}>\n                <Typography variant=\"h4\" color=\"info.main\">\n                  245ms\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Tempo M√©dio de Resposta\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} md={3}>\n            <Card>\n              <CardContent sx={{ textAlign: 'center' }}>\n                <Typography variant=\"h4\" color=\"success.main\">\n                  99.8%\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Uptime\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </TabPanel>\n\n      {/* Create API Key Dialog */}\n      <Dialog open={showCreateKeyDialog} onClose={() => setShowCreateKeyDialog(false)} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>Criar Nova Chave de API</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Nome da Chave\"\n            fullWidth\n            variant=\"outlined\"\n            value={newKeyName}\n            onChange={(e) => setNewKeyName(e.target.value)}\n            sx={{ mb: 3 }}\n          />\n          \n          <Typography variant=\"body2\" sx={{ mb: 2 }}>\n            Selecione as permiss√µes:\n          </Typography>\n          \n          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\n            {availablePermissions.map((permission) => (\n              <Chip\n                key={permission}\n                label={permission}\n                clickable\n                color={selectedPermissions.includes(permission) ? 'primary' : 'default'}\n                onClick={() => {\n                  if (selectedPermissions.includes(permission)) {\n                    setSelectedPermissions(selectedPermissions.filter(p => p !== permission));\n                  } else {\n                    setSelectedPermissions([...selectedPermissions, permission]);\n                  }\n                }}\n              />\n            ))}\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShowCreateKeyDialog(false)}>Cancelar</Button>\n          <Button onClick={handleCreateKey} variant=\"contained\" disabled={!newKeyName.trim()}>\n            Criar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n};\n\nexport default DeveloperPortal;"],"names":["DeveloperPortal","activeTab","setActiveTab","useState","apiKeys","setApiKeys","usageLogs","setUsageLogs","showCreateKeyDialog","setShowCreateKeyDialog","newKeyName","setNewKeyName","selectedPermissions","setSelectedPermissions","visibleKeys","setVisibleKeys","useEffect","handleCreateKey","newKey","toggleKeyVisibility","keyId","newVisible","copyToClipboard","text","revokeKey","key","availablePermissions","TabPanel","children","value","index","jsx","Box","jsxs","Container","Typography","Code","Alert","Tabs","_","newValue","Tab","Key","Monitor","Description","Analytics","Button","Add","Grid","apiKey","Card","CardContent","Chip","TextField","Tooltip","IconButton","VisibilityOff","Visibility","ContentCopy","permission","CardActions","Delete","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","log","Launch","Accordion","AccordionSummary","ExpandMore","AccordionDetails","sum","Dialog","DialogTitle","DialogContent","e","p","DialogActions"],"mappings":"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"}