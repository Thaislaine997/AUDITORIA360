{"version":3,"file":"DocumentsPage-Bp21CaEs.js","sources":["../../src/pages/DocumentsPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Container,\n  Typography,\n  Paper,\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Button,\n  Chip,\n  IconButton,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  TextField,\n  InputAdornment,\n  Tooltip,\n} from \"@mui/material\";\nimport {\n  Search as SearchIcon,\n  Visibility as ViewIcon,\n  Download as DownloadIcon,\n  CloudUpload as UploadIcon,\n} from \"@mui/icons-material\";\nimport ExportButton from \"../components/ExportButton\";\n\ninterface Document {\n  id: number;\n  title: string;\n  category: string;\n  upload_date: string;\n  size: string;\n  uploaded_by: string;\n  status?: string;\n}\n\nconst DocumentsPage: React.FC = () => {\n  const [documents, setDocuments] = useState<Document[]>([]);\n  const [filteredDocuments, setFilteredDocuments] = useState<Document[]>([]);\n  const [categoryFilter, setCategoryFilter] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetchDocuments();\n  }, []);\n\n  useEffect(() => {\n    // Apply filters\n    let filtered = documents;\n    \n    if (categoryFilter) {\n      filtered = filtered.filter(doc => doc.category === categoryFilter);\n    }\n    \n    if (searchTerm) {\n      filtered = filtered.filter(doc => \n        doc.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        doc.uploaded_by.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n    \n    setFilteredDocuments(filtered);\n  }, [documents, categoryFilter, searchTerm]);\n\n  const fetchDocuments = async () => {\n    setLoading(true);\n    // TODO: Replace with actual API call\n    const mockDocuments: Document[] = [\n      {\n        id: 1,\n        title: \"Nota Fiscal 001.pdf\",\n        category: \"fiscal\",\n        upload_date: \"2024-01-10T09:30:00Z\",\n        size: \"2.5 MB\",\n        uploaded_by: \"Cliente ABC\",\n        status: \"processed\"\n      },\n      {\n        id: 2,\n        title: \"Contrato Social.pdf\",\n        category: \"legal\",\n        upload_date: \"2024-01-08T14:15:00Z\", \n        size: \"1.8 MB\",\n        uploaded_by: \"Empresa XYZ\",\n        status: \"processing\"\n      },\n      {\n        id: 3,\n        title: \"Comprovante Pagamento.pdf\",\n        category: \"payment\",\n        upload_date: \"2024-01-12T11:20:00Z\",\n        size: \"750 KB\",\n        uploaded_by: \"Fornecedor ABC\",\n        status: \"processed\"\n      },\n      {\n        id: 4,\n        title: \"Relatório Contábil Dezembro.xlsx\",\n        category: \"report\",\n        upload_date: \"2024-01-05T16:45:00Z\",\n        size: \"3.2 MB\",\n        uploaded_by: \"Contabilidade Santos\",\n        status: \"processed\"\n      }\n    ];\n    \n    setDocuments(mockDocuments);\n    setLoading(false);\n  };\n\n  const handleExportPdf = async () => {\n    // TODO: Implement actual PDF export\n    console.log(\"Exporting documents to PDF\");\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000));\n  };\n\n  const handleExportCsv = async () => {\n    // TODO: Implement actual CSV export\n    console.log(\"Exporting documents to CSV\");\n    // Simulate API call\n    await new Promise(resolve => setTimeout(resolve, 1000));\n  };\n\n  const getCategoryLabel = (category: string) => {\n    switch (category) {\n      case \"fiscal\":\n        return \"Fiscal\";\n      case \"legal\":\n        return \"Jurídico\";\n      case \"payment\":\n        return \"Pagamento\";\n      case \"report\":\n        return \"Relatório\";\n      default:\n        return \"Outros\";\n    }\n  };\n\n  const getCategoryColor = (category: string) => {\n    switch (category) {\n      case \"fiscal\":\n        return \"primary\";\n      case \"legal\":\n        return \"secondary\";\n      case \"payment\":\n        return \"success\";\n      case \"report\":\n        return \"info\";\n      default:\n        return \"default\";\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"processed\":\n        return \"success\";\n      case \"processing\":\n        return \"warning\";\n      case \"error\":\n        return \"error\";\n      default:\n        return \"default\";\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString(\"pt-BR\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    });\n  };\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Box sx={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", mb: 3 }}>\n        <Typography variant=\"h4\" gutterBottom>\n          Documentos\n        </Typography>\n        <Box sx={{ display: \"flex\", gap: 2 }}>\n          <ExportButton\n            onExportPdf={handleExportPdf}\n            onExportCsv={handleExportCsv}\n          />\n          <Button\n            variant=\"contained\"\n            startIcon={<UploadIcon />}\n          >\n            Upload Documento\n          </Button>\n        </Box>\n      </Box>\n\n      {/* Filters */}\n      <Paper sx={{ p: 3, mb: 3 }}>\n        <Box sx={{ display: \"flex\", gap: 2, flexWrap: \"wrap\" }}>\n          <TextField\n            placeholder=\"Buscar documentos...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            sx={{ minWidth: 300 }}\n          />\n          <FormControl sx={{ minWidth: 200 }}>\n            <InputLabel>Categoria</InputLabel>\n            <Select\n              value={categoryFilter}\n              onChange={(e) => setCategoryFilter(e.target.value)}\n            >\n              <MenuItem value=\"\">Todas</MenuItem>\n              <MenuItem value=\"fiscal\">Fiscal</MenuItem>\n              <MenuItem value=\"legal\">Jurídico</MenuItem>\n              <MenuItem value=\"payment\">Pagamento</MenuItem>\n              <MenuItem value=\"report\">Relatório</MenuItem>\n            </Select>\n          </FormControl>\n          <Button \n            variant=\"outlined\"\n            onClick={() => {\n              setCategoryFilter(\"\");\n              setSearchTerm(\"\");\n            }}\n          >\n            Limpar Filtros\n          </Button>\n        </Box>\n      </Paper>\n\n      {/* Documents Table */}\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Documento</TableCell>\n              <TableCell>Categoria</TableCell>\n              <TableCell>Data Upload</TableCell>\n              <TableCell>Tamanho</TableCell>\n              <TableCell>Enviado por</TableCell>\n              <TableCell>Status</TableCell>\n              <TableCell align=\"center\">Ações</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredDocuments.map((document) => (\n              <TableRow key={document.id} hover>\n                <TableCell>\n                  <Typography variant=\"body2\" fontWeight=\"medium\">\n                    {document.title}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Chip\n                    label={getCategoryLabel(document.category)}\n                    color={getCategoryColor(document.category) as any}\n                    size=\"small\"\n                    variant=\"outlined\"\n                  />\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"body2\">\n                    {formatDate(document.upload_date)}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"body2\">\n                    {document.size}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  <Typography variant=\"body2\">\n                    {document.uploaded_by}\n                  </Typography>\n                </TableCell>\n                <TableCell>\n                  {document.status && (\n                    <Chip\n                      label={document.status === \"processed\" ? \"Processado\" : \n                            document.status === \"processing\" ? \"Processando\" : \"Erro\"}\n                      color={getStatusColor(document.status) as any}\n                      size=\"small\"\n                    />\n                  )}\n                </TableCell>\n                <TableCell align=\"center\">\n                  <Box sx={{ display: \"flex\", gap: 1, justifyContent: \"center\" }}>\n                    <Tooltip title=\"Visualizar\">\n                      <IconButton size=\"small\">\n                        <ViewIcon />\n                      </IconButton>\n                    </Tooltip>\n                    <Tooltip title=\"Download\">\n                      <IconButton size=\"small\">\n                        <DownloadIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </Box>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {filteredDocuments.length === 0 && !loading && (\n        <Paper sx={{ p: 4, textAlign: \"center\", mt: 3 }}>\n          <Typography variant=\"body1\" color=\"text.secondary\">\n            {searchTerm || categoryFilter ? \"Nenhum documento encontrado com os filtros aplicados.\" : \"Nenhum documento encontrado.\"}\n          </Typography>\n        </Paper>\n      )}\n    </Container>\n  );\n};\n\nexport default DocumentsPage;\n"],"names":["DocumentsPage","documents","setDocuments","useState","filteredDocuments","setFilteredDocuments","categoryFilter","setCategoryFilter","searchTerm","setSearchTerm","loading","setLoading","useEffect","fetchDocuments","filtered","doc","handleExportPdf","resolve","handleExportCsv","getCategoryLabel","category","getCategoryColor","getStatusColor","status","formatDate","dateString","jsxs","Container","Box","jsx","Typography","ExportButton","Button","UploadIcon","Paper","TextField","e","InputAdornment","SearchIcon","FormControl","InputLabel","Select","MenuItem","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","document","Chip","Tooltip","IconButton","ViewIcon","DownloadIcon"],"mappings":"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"}