-- /migrations/005_evoluir_schema_ia.sql
-- EVOLUÇÃO DA BASE DE DADOS PARA APRENDIZAGEM CONTÍNUA E RAG
-- Este script transforma o sistema de extração única em uma plataforma de aprendizagem

-- Primeiro, criar o ENUM para status de processamento se não existir
DO $$ 
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'status_processamento') THEN
        CREATE TYPE status_processamento AS ENUM ('PENDENTE', 'APROVADO', 'REJEITADO', 'CONCLUIDO');
    END IF;
END$$;

-- PASSO 1: Criar a nova tabela para extrações brutas da IA
CREATE TABLE IF NOT EXISTS public."ExtracoesIA" (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    documento_id BIGINT NOT NULL REFERENCES public."Documentos"(id) ON DELETE CASCADE,

    -- Os mesmos campos que a IA extrai
    nome_parametro TEXT NOT NULL,
    valor_parametro TEXT NOT NULL,
    tipo_valor TEXT NOT NULL,
    contexto_original TEXT,

    -- Controlo do processo de validação
    status_validacao status_processamento DEFAULT 'PENDENTE' NOT NULL,

    -- Dados da execução da IA
    modelo_utilizado TEXT, -- Ex: 'gemini-1.5-flash-latest'
    ia_confidence_score REAL, -- Pontuação de confiança da IA
    raw_response_ia JSONB, -- A resposta JSON completa da IA para auditoria

    criado_em TIMESTAMPTZ DEFAULT NOW() NOT NULL,
    validado_em TIMESTAMPTZ, -- Data de validação humana
    validado_por TEXT -- ID ou nome do validador
);

-- PASSO 2: Renomear a tabela existente para refletir que ela contém dados validados
ALTER TABLE IF EXISTS public."ParametrosLegais" RENAME TO "RegrasValidadas";

-- PASSO 3: Adicionar novas colunas à tabela de regras validadas
ALTER TABLE public."RegrasValidadas" 
ADD COLUMN IF NOT EXISTS ia_confidence_score REAL,
ADD COLUMN IF NOT EXISTS validado_por_humano BOOLEAN DEFAULT FALSE,
ADD COLUMN IF NOT EXISTS id_previsao_original BIGINT,
ADD COLUMN IF NOT EXISTS validado_em TIMESTAMPTZ,
ADD COLUMN IF NOT EXISTS validado_por TEXT;

-- PASSO 4: Adicionar chave estrangeira na tabela de regras validadas
ALTER TABLE public."RegrasValidadas" 
ADD CONSTRAINT IF NOT EXISTS fk_previsao_original 
FOREIGN KEY (id_previsao_original) REFERENCES public."ExtracoesIA"(id);

-- PASSO 5: Criar índices para performance
CREATE INDEX IF NOT EXISTS idx_extracoes_ia_status 
ON public."ExtracoesIA" (status_validacao);

CREATE INDEX IF NOT EXISTS idx_extracoes_ia_documento_id 
ON public."ExtracoesIA" (documento_id);

CREATE INDEX IF NOT EXISTS idx_extracoes_ia_criado_em 
ON public."ExtracoesIA" (criado_em DESC);

CREATE INDEX IF NOT EXISTS idx_regras_validadas_validado_humano 
ON public."RegrasValidadas" (validado_por_humano);

CREATE INDEX IF NOT EXISTS idx_regras_validadas_previsao_original 
ON public."RegrasValidadas" (id_previsao_original);

-- PASSO 6: Adicionar comentários para documentação
COMMENT ON TABLE public."ExtracoesIA" IS 'Tabela para armazenar as previsões brutas da IA antes da validação humana';
COMMENT ON COLUMN public."ExtracoesIA".status_validacao IS 'Status da validação: PENDENTE, APROVADO, REJEITADO, CONCLUIDO';
COMMENT ON COLUMN public."ExtracoesIA".modelo_utilizado IS 'Modelo de IA utilizado (ex: gemini-1.5-flash-latest)';
COMMENT ON COLUMN public."ExtracoesIA".ia_confidence_score IS 'Pontuação de confiança da IA (0.0 a 1.0)';
COMMENT ON COLUMN public."ExtracoesIA".raw_response_ia IS 'Resposta completa da IA em JSON para auditoria';

COMMENT ON TABLE public."RegrasValidadas" IS 'Tabela de regras validadas por humanos - nossa fonte de verdade';
COMMENT ON COLUMN public."RegrasValidadas".validado_por_humano IS 'Indica se foi validado por um humano';
COMMENT ON COLUMN public."RegrasValidadas".id_previsao_original IS 'Referência à previsão original da IA';
COMMENT ON COLUMN public."RegrasValidadas".validado_por IS 'Identificador do validador humano';