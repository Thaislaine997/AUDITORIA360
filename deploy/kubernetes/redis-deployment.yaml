# Redis deployment for distributed caching
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cache
  labels:
    app: redis-cache
    tier: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-cache
  template:
    metadata:
      labels:
        app: redis-cache
        tier: cache
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        args:
          - redis-server
          - --maxmemory
          - 512mb
          - --maxmemory-policy
          - allkeys-lru
          - --appendonly
          - "yes"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        volumeMounts:
        - name: redis-data
          mountPath: /data
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          timeoutSeconds: 1
          failureThreshold: 3
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  labels:
    app: redis-cache
spec:
  selector:
    app: redis-cache
  ports:
  - protocol: TCP
    port: 6379
    targetPort: 6379
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  labels:
    app: redis-cache
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: gp2
---
# Redis Sentinel for high availability (optional)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-sentinel
  labels:
    app: redis-sentinel
    tier: cache
spec:
  replicas: 3
  selector:
    matchLabels:
      app: redis-sentinel
  template:
    metadata:
      labels:
        app: redis-sentinel
        tier: cache
    spec:
      containers:
      - name: redis-sentinel
        image: redis:7-alpine
        ports:
        - containerPort: 26379
        args:
          - redis-sentinel
          - /etc/redis/sentinel.conf
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        volumeMounts:
        - name: sentinel-config
          mountPath: /etc/redis
        livenessProbe:
          tcpSocket:
            port: 26379
          initialDelaySeconds: 30
        readinessProbe:
          tcpSocket:
            port: 26379
          initialDelaySeconds: 5
      volumes:
      - name: sentinel-config
        configMap:
          name: redis-sentinel-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-sentinel-config
  labels:
    app: redis-sentinel
data:
  sentinel.conf: |
    port 26379
    sentinel monitor mymaster redis-service 6379 2
    sentinel down-after-milliseconds mymaster 5000
    sentinel failover-timeout mymaster 10000
    sentinel parallel-syncs mymaster 1
---
apiVersion: v1
kind: Service
metadata:
  name: redis-sentinel-service
  labels:
    app: redis-sentinel
spec:
  selector:
    app: redis-sentinel
  ports:
  - protocol: TCP
    port: 26379
    targetPort: 26379
  type: ClusterIP