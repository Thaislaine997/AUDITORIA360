version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: auditoria360-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: auditoria360-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=auditoria360
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - prometheus

  node-exporter:
    image: prom/node-exporter:latest
    container_name: auditoria360-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - monitoring

  auditoria360-exporter:
    image: python:3.12-slim
    container_name: auditoria360-metrics-exporter
    ports:
      - "8000:8000"
    volumes:
      - ./metrics_exporter.py:/app/metrics_exporter.py:ro
      - ../status_report_auditoria360.json:/app/status_report.json:ro
    working_dir: /app
    command: >
      sh -c "pip install prometheus_client requests && python metrics_exporter.py"
    restart: unless-stopped
    networks:
      - monitoring
    environment:
      - AUDITORIA360_STATUS_FILE=/app/status_report.json
      - EXPORTER_PORT=8000

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: