# .github/workflows/check-docs.yml
name: Check Docs on PR

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  check-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        run: |
          # Get list of changed files
          git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.sha }} > changed_files.txt
          echo "Changed files:"
          cat changed_files.txt
          
          # Check if any code files were changed
          CODE_CHANGED=false
          DOC_CHANGED=false
          
          while IFS= read -r file; do
            case "$file" in
              *.py|*.js|*.ts|*.jsx|*.tsx|*.java|*.go|*.rs|*.cpp|*.c|*.h|*.hpp)
                echo "Code file changed: $file"
                CODE_CHANGED=true
                ;;
              *.md|*.rst|*.txt|docs/*)
                echo "Documentation file changed: $file"
                DOC_CHANGED=true
                ;;
              src/*|api/*|services/*)
                echo "Source file changed: $file"
                CODE_CHANGED=true
                ;;
            esac
          done < changed_files.txt
          
          echo "code_changed=$CODE_CHANGED" >> $GITHUB_OUTPUT
          echo "doc_changed=$DOC_CHANGED" >> $GITHUB_OUTPUT

      - name: Check if documentation needs updating
        id: doc-check
        run: |
          CODE_CHANGED="${{ steps.changed-files.outputs.code_changed }}"
          DOC_CHANGED="${{ steps.changed-files.outputs.doc_changed }}"
          
          echo "Code changed: $CODE_CHANGED"
          echo "Documentation changed: $DOC_CHANGED"
          
          # If code was changed but no documentation, warn
          if [ "$CODE_CHANGED" = "true" ] && [ "$DOC_CHANGED" = "false" ]; then
            echo "‚ö†Ô∏è Code changes detected without documentation updates"
            echo "doc_warning=true" >> $GITHUB_OUTPUT
          else
            echo "‚úÖ Documentation check passed"
            echo "doc_warning=false" >> $GITHUB_OUTPUT
          fi

      - name: Verify critical documentation exists
        run: |
          echo "üìö Verificando documenta√ß√£o cr√≠tica..."
          
          MISSING_DOCS=()
          CRITICAL_DOCS=(
            "README.md"
            "CHANGELOG.md"
            "CONTRIBUTING.md"
            "MANUAL_SUPREMO.md"
          )
          
          for doc in "${CRITICAL_DOCS[@]}"; do
            if [ ! -f "$doc" ]; then
              echo "‚ùå $doc - AUSENTE"
              MISSING_DOCS+=("$doc")
            else
              echo "‚úÖ $doc - OK"
              # Check if file is substantial (more than 10 lines)
              lines=$(wc -l < "$doc")
              if [ "$lines" -lt 10 ]; then
                echo "‚ö†Ô∏è $doc parece muito pequeno ($lines linhas)"
              fi
            fi
          done
          
          if [ ${#MISSING_DOCS[@]} -gt 0 ]; then
            echo "::error::Documenta√ß√£o cr√≠tica ausente: ${MISSING_DOCS[*]}"
            exit 1
          fi

      - name: Check PR description quality
        run: |
          PR_BODY="${{ github.event.pull_request.body }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          
          echo "üîç Verificando qualidade da descri√ß√£o do PR..."
          
          # Check if PR has a meaningful title
          if [ ${#PR_TITLE} -lt 10 ]; then
            echo "::warning::T√≠tulo do PR muito curto. Considere ser mais descritivo."
          fi
          
          # Check if PR has a description
          if [ -z "$PR_BODY" ] || [ ${#PR_BODY} -lt 20 ]; then
            echo "::warning::Descri√ß√£o do PR est√° vazia ou muito curta. Considere adicionar mais detalhes sobre as mudan√ßas."
          fi
          
          # Check for common keywords that indicate good practices
          if echo "$PR_BODY" | grep -qi -E "(teste|test|doc|changelog|breaking)"; then
            echo "‚úÖ PR menciona aspectos importantes (testes, documenta√ß√£o, etc.)"
          else
            echo "::notice::Considere mencionar se foram adicionados testes ou atualiza√ß√µes na documenta√ß√£o."
          fi

      - name: Validate documentation format
        run: |
          echo "üìù Validando formato da documenta√ß√£o..."
          
          # Check README structure
          if [ -f "README.md" ]; then
            if ! grep -q "^#" README.md; then
              echo "::warning::README.md n√£o tem cabe√ßalhos principais"
            fi
            
            if ! grep -q -i "installation\|setup\|getting started" README.md; then
              echo "::notice::Considere adicionar se√ß√£o de instala√ß√£o/setup no README.md"
            fi
            
            if ! grep -q -i "usage\|exemplo\|example" README.md; then
              echo "::notice::Considere adicionar exemplos de uso no README.md"
            fi
          fi
          
          # Check for common documentation files
          DOC_FILES=(
            "docs/api.md"
            "docs/installation.md"
            "docs/deployment.md"
            "API.md"
            "DEPLOYMENT.md"
          )
          
          echo "üìÇ Verificando documenta√ß√£o adicional:"
          for doc in "${DOC_FILES[@]}"; do
            if [ -f "$doc" ]; then
              echo "‚úÖ $doc encontrado"
            else
              echo "üìù $doc n√£o encontrado (opcional)"
            fi
          done

      - name: Generate Documentation Report
        if: always()
        run: |
          echo "# Relat√≥rio de Verifica√ß√£o de Documenta√ß√£o - $(date)" > docs-check-report.md
          echo "" >> docs-check-report.md
          echo "## PR Information" >> docs-check-report.md
          echo "- PR: #${{ github.event.pull_request.number }}" >> docs-check-report.md
          echo "- T√≠tulo: ${{ github.event.pull_request.title }}" >> docs-check-report.md
          echo "- Autor: @${{ github.event.pull_request.user.login }}" >> docs-check-report.md
          echo "- Branch: ${{ github.event.pull_request.head.ref }}" >> docs-check-report.md
          echo "" >> docs-check-report.md
          echo "## Arquivos Alterados" >> docs-check-report.md
          echo "\`\`\`" >> docs-check-report.md
          cat changed_files.txt >> docs-check-report.md
          echo "\`\`\`" >> docs-check-report.md
          echo "" >> docs-check-report.md
          echo "## Status da Verifica√ß√£o" >> docs-check-report.md
          echo "- C√≥digo alterado: ${{ steps.changed-files.outputs.code_changed }}" >> docs-check-report.md
          echo "- Documenta√ß√£o alterada: ${{ steps.changed-files.outputs.doc_changed }}" >> docs-check-report.md
          echo "- Aviso de documenta√ß√£o: ${{ steps.doc-check.outputs.doc_warning }}" >> docs-check-report.md
          echo "" >> docs-check-report.md
          echo "## Arquivos de Documenta√ß√£o" >> docs-check-report.md
          for doc in README.md CHANGELOG.md CONTRIBUTING.md MANUAL_SUPREMO.md; do
            if [ -f "$doc" ]; then
              lines=$(wc -l < "$doc")
              echo "- ‚úÖ $doc ($lines linhas)" >> docs-check-report.md
            else
              echo "- ‚ùå $doc (ausente)" >> docs-check-report.md
            fi
          done
          echo "" >> docs-check-report.md
          echo "## Recomenda√ß√µes" >> docs-check-report.md
          if [ "${{ steps.doc-check.outputs.doc_warning }}" = "true" ]; then
            echo "- ‚ö†Ô∏è Considere atualizar a documenta√ß√£o junto com as mudan√ßas no c√≥digo" >> docs-check-report.md
          fi
          echo "- [ ] Verifique se o CHANGELOG.md ser√° atualizado automaticamente" >> docs-check-report.md
          echo "- [ ] Considere adicionar exemplos de uso se aplic√°vel" >> docs-check-report.md
          echo "- [ ] Verifique se a documenta√ß√£o da API est√° atualizada" >> docs-check-report.md

      - name: Comment on PR (if documentation warning)
        if: steps.doc-check.outputs.doc_warning == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## üìù Verifica√ß√£o de Documenta√ß√£o\n\n' +
                    '‚ö†Ô∏è **Aten√ß√£o**: Mudan√ßas no c√≥digo foram detectadas, mas n√£o foram encontradas atualiza√ß√µes na documenta√ß√£o.\n\n' +
                    '### Recomenda√ß√µes:\n' +
                    '- Considere atualizar o README.md se necess√°rio\n' +
                    '- Verifique se o MANUAL_SUPREMO.md precisa de atualiza√ß√µes\n' +
                    '- Adicione exemplos de uso se introduziu novas funcionalidades\n' +
                    '- O CHANGELOG.md ser√° atualizado automaticamente ap√≥s o merge\n\n' +
                    '### Arquivos de documenta√ß√£o importantes:\n' +
                    '- `README.md` - Vis√£o geral do projeto\n' +
                    '- `MANUAL_SUPREMO.md` - Documenta√ß√£o completa\n' +
                    '- `CONTRIBUTING.md` - Guia de contribui√ß√£o\n' +
                    '- `docs/` - Documenta√ß√£o detalhada\n\n' +
                    '*Esta verifica√ß√£o √© autom√°tica e faz parte das boas pr√°ticas do projeto.*'
            })

      - name: Upload Documentation Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: docs-check-report-${{ github.run_number }}
          path: docs-check-report.md
          retention-days: 30